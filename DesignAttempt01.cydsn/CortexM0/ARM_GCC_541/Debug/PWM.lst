ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWM_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	PWM_Enable
  22              		.code	16
  23              		.thumb_func
  24              		.type	PWM_Enable, %function
  25              	PWM_Enable:
  26              	.LFB3:
  27              		.file 1 "Generated_Source\\PSoC4\\PWM.c"
   1:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:Generated_Source\PSoC4/PWM.c **** * Version 3.30
   4:Generated_Source\PSoC4/PWM.c **** *
   5:Generated_Source\PSoC4/PWM.c **** * Description:
   6:Generated_Source\PSoC4/PWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC4/PWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC4/PWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC4/PWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC4/PWM.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC4/PWM.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC4/PWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC4/PWM.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC4/PWM.c **** *
  15:Generated_Source\PSoC4/PWM.c **** * Note:
  16:Generated_Source\PSoC4/PWM.c **** *
  17:Generated_Source\PSoC4/PWM.c **** *******************************************************************************
  18:Generated_Source\PSoC4/PWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC4/PWM.c **** ********************************************************************************/
  23:Generated_Source\PSoC4/PWM.c **** 
  24:Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  25:Generated_Source\PSoC4/PWM.c **** 
  26:Generated_Source\PSoC4/PWM.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC4/PWM.c **** #ifdef PWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC4/PWM.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC4/PWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC4/PWM.c **** #endif /* PWM_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 2


  31:Generated_Source\PSoC4/PWM.c **** 
  32:Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  33:Generated_Source\PSoC4/PWM.c **** 
  34:Generated_Source\PSoC4/PWM.c **** 
  35:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  36:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
  37:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  38:Generated_Source\PSoC4/PWM.c **** *
  39:Generated_Source\PSoC4/PWM.c **** * Summary:
  40:Generated_Source\PSoC4/PWM.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC4/PWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC4/PWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC4/PWM.c **** *
  44:Generated_Source\PSoC4/PWM.c **** * Parameters:
  45:Generated_Source\PSoC4/PWM.c **** *  None
  46:Generated_Source\PSoC4/PWM.c **** *
  47:Generated_Source\PSoC4/PWM.c **** * Return:
  48:Generated_Source\PSoC4/PWM.c **** *  None
  49:Generated_Source\PSoC4/PWM.c **** *
  50:Generated_Source\PSoC4/PWM.c **** * Global variables:
  51:Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC4/PWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC4/PWM.c **** *
  54:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/PWM.c **** void PWM_Start(void) 
  56:Generated_Source\PSoC4/PWM.c **** {
  57:Generated_Source\PSoC4/PWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC4/PWM.c ****     if(PWM_initVar == 0u)
  59:Generated_Source\PSoC4/PWM.c ****     {
  60:Generated_Source\PSoC4/PWM.c ****         PWM_Init();
  61:Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
  62:Generated_Source\PSoC4/PWM.c ****     }
  63:Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
  64:Generated_Source\PSoC4/PWM.c **** 
  65:Generated_Source\PSoC4/PWM.c **** }
  66:Generated_Source\PSoC4/PWM.c **** 
  67:Generated_Source\PSoC4/PWM.c **** 
  68:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  69:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  70:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  71:Generated_Source\PSoC4/PWM.c **** *
  72:Generated_Source\PSoC4/PWM.c **** * Summary:
  73:Generated_Source\PSoC4/PWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC4/PWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC4/PWM.c **** *  PWM_Start().
  76:Generated_Source\PSoC4/PWM.c **** *
  77:Generated_Source\PSoC4/PWM.c **** * Parameters:
  78:Generated_Source\PSoC4/PWM.c **** *  None
  79:Generated_Source\PSoC4/PWM.c **** *
  80:Generated_Source\PSoC4/PWM.c **** * Return:
  81:Generated_Source\PSoC4/PWM.c **** *  None
  82:Generated_Source\PSoC4/PWM.c **** *
  83:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  84:Generated_Source\PSoC4/PWM.c **** void PWM_Init(void) 
  85:Generated_Source\PSoC4/PWM.c **** {
  86:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction || PWM_UseControl)
  87:Generated_Source\PSoC4/PWM.c ****         uint8 ctrl;
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 3


  88:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction || PWM_UseControl) */
  89:Generated_Source\PSoC4/PWM.c **** 
  90:Generated_Source\PSoC4/PWM.c ****     #if(!PWM_UsingFixedFunction)
  91:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UseStatus)
  92:Generated_Source\PSoC4/PWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC4/PWM.c ****             uint8 PWM_interruptState;
  94:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseStatus) */
  95:Generated_Source\PSoC4/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
  96:Generated_Source\PSoC4/PWM.c **** 
  97:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
  98:Generated_Source\PSoC4/PWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL |= PWM_CFG0_MODE;
 100:Generated_Source\PSoC4/PWM.c ****         #if (PWM_DeadBand2_4)
 101:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL |= PWM_CFG0_DB;
 102:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_DeadBand2_4) */
 103:Generated_Source\PSoC4/PWM.c **** 
 104:Generated_Source\PSoC4/PWM.c ****         ctrl = PWM_CONTROL3 & ((uint8 )(~PWM_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL3 = ctrl | PWM_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC4/PWM.c **** 
 107:Generated_Source\PSoC4/PWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC4/PWM.c ****         PWM_RT1 &= ((uint8)(~PWM_RT1_MASK));
 109:Generated_Source\PSoC4/PWM.c ****         PWM_RT1 |= PWM_SYNC;
 110:Generated_Source\PSoC4/PWM.c **** 
 111:Generated_Source\PSoC4/PWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC4/PWM.c ****         PWM_RT1 &= ((uint8)(~PWM_SYNCDSI_MASK));
 113:Generated_Source\PSoC4/PWM.c ****         PWM_RT1 |= PWM_SYNCDSI_EN;
 114:Generated_Source\PSoC4/PWM.c **** 
 115:Generated_Source\PSoC4/PWM.c ****     #elif (PWM_UseControl)
 116:Generated_Source\PSoC4/PWM.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC4/PWM.c ****         ctrl = PWM_CONTROL & ((uint8)(~PWM_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC4/PWM.c ****                 ((uint8)(~PWM_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL = ctrl | PWM_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC4/PWM.c ****                                    PWM_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 122:Generated_Source\PSoC4/PWM.c **** 
 123:Generated_Source\PSoC4/PWM.c ****     #if (!PWM_UsingFixedFunction)
 124:Generated_Source\PSoC4/PWM.c ****         #if (PWM_Resolution == 8)
 125:Generated_Source\PSoC4/PWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP0 |= (PWM_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC4/PWM.c ****         #else /* (PWM_Resolution == 16)*/
 128:Generated_Source\PSoC4/PWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP0 |= (PWM_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP1 |= (PWM_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_Resolution == 8) */
 132:Generated_Source\PSoC4/PWM.c **** 
 133:Generated_Source\PSoC4/PWM.c ****         PWM_WriteCounter(PWM_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC4/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
 135:Generated_Source\PSoC4/PWM.c **** 
 136:Generated_Source\PSoC4/PWM.c ****     PWM_WritePeriod(PWM_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC4/PWM.c **** 
 138:Generated_Source\PSoC4/PWM.c ****         #if (PWM_UseOneCompareMode)
 139:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC4/PWM.c ****         #else
 141:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare1(PWM_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare2(PWM_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseOneCompareMode) */
 144:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 4


 145:Generated_Source\PSoC4/PWM.c ****         #if (PWM_KillModeMinTime)
 146:Generated_Source\PSoC4/PWM.c ****             PWM_WriteKillTime(PWM_MinimumKillTime);
 147:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_KillModeMinTime) */
 148:Generated_Source\PSoC4/PWM.c **** 
 149:Generated_Source\PSoC4/PWM.c ****         #if (PWM_DeadBandUsed)
 150:Generated_Source\PSoC4/PWM.c ****             PWM_WriteDeadTime(PWM_INIT_DEAD_TIME);
 151:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_DeadBandUsed) */
 152:Generated_Source\PSoC4/PWM.c **** 
 153:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseStatus || PWM_UsingFixedFunction)
 154:Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
 156:Generated_Source\PSoC4/PWM.c **** 
 157:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
 158:Generated_Source\PSoC4/PWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_ENABLE |= PWM_BLOCK_EN_MASK;
 160:Generated_Source\PSoC4/PWM.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL2 |= PWM_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC4/PWM.c ****     #else
 163:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UseStatus)
 164:Generated_Source\PSoC4/PWM.c **** 
 165:Generated_Source\PSoC4/PWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC4/PWM.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC4/PWM.c ****             PWM_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC4/PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC4/PWM.c ****             PWM_STATUS_AUX_CTRL |= PWM_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC4/PWM.c **** 
 171:Generated_Source\PSoC4/PWM.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC4/PWM.c ****             CyExitCriticalSection(PWM_interruptState);
 173:Generated_Source\PSoC4/PWM.c **** 
 174:Generated_Source\PSoC4/PWM.c ****             /* Clear the FIFO to enable the PWM_STATUS_FIFOFULL
 175:Generated_Source\PSoC4/PWM.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC4/PWM.c ****             PWM_ClearFIFO();
 177:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseStatus) */
 178:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 179:Generated_Source\PSoC4/PWM.c **** }
 180:Generated_Source\PSoC4/PWM.c **** 
 181:Generated_Source\PSoC4/PWM.c **** 
 182:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 183:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 184:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 185:Generated_Source\PSoC4/PWM.c **** *
 186:Generated_Source\PSoC4/PWM.c **** * Summary:
 187:Generated_Source\PSoC4/PWM.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC4/PWM.c **** *
 189:Generated_Source\PSoC4/PWM.c **** * Parameters:
 190:Generated_Source\PSoC4/PWM.c **** *  None
 191:Generated_Source\PSoC4/PWM.c **** *
 192:Generated_Source\PSoC4/PWM.c **** * Return:
 193:Generated_Source\PSoC4/PWM.c **** *  None
 194:Generated_Source\PSoC4/PWM.c **** *
 195:Generated_Source\PSoC4/PWM.c **** * Side Effects:
 196:Generated_Source\PSoC4/PWM.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC4/PWM.c **** *
 198:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 199:Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void) 
 200:Generated_Source\PSoC4/PWM.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC4/PWM.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
 203:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_ENABLE |= PWM_BLOCK_EN_MASK;
 204:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_STBY_ENABLE |= PWM_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 206:Generated_Source\PSoC4/PWM.c **** 
 207:Generated_Source\PSoC4/PWM.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseControl || PWM_UsingFixedFunction)
 209:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL |= PWM_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1178     		ldrb	r1, [r2]
  36 0004 8023     		movs	r3, #128
  37 0006 5B42     		rsbs	r3, r3, #0
  38 0008 0B43     		orrs	r3, r1
  39 000a DBB2     		uxtb	r3, r3
  40 000c 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseControl || PWM_UsingFixedFunction) */
 211:Generated_Source\PSoC4/PWM.c **** }
  41              		.loc 1 211 0
  42              		@ sp needed
  43 000e 7047     		bx	lr
  44              	.L3:
  45              		.align	2
  46              	.L2:
  47 0010 72000F40 		.word	1074724978
  48              		.cfi_endproc
  49              	.LFE3:
  50              		.size	PWM_Enable, .-PWM_Enable
  51              		.section	.text.PWM_Stop,"ax",%progbits
  52              		.align	2
  53              		.global	PWM_Stop
  54              		.code	16
  55              		.thumb_func
  56              		.type	PWM_Stop, %function
  57              	PWM_Stop:
  58              	.LFB4:
 212:Generated_Source\PSoC4/PWM.c **** 
 213:Generated_Source\PSoC4/PWM.c **** 
 214:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 215:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 216:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 217:Generated_Source\PSoC4/PWM.c **** *
 218:Generated_Source\PSoC4/PWM.c **** * Summary:
 219:Generated_Source\PSoC4/PWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC4/PWM.c **** *  interrupts.
 221:Generated_Source\PSoC4/PWM.c **** *
 222:Generated_Source\PSoC4/PWM.c **** * Parameters:
 223:Generated_Source\PSoC4/PWM.c **** *  None
 224:Generated_Source\PSoC4/PWM.c **** *
 225:Generated_Source\PSoC4/PWM.c **** * Return:
 226:Generated_Source\PSoC4/PWM.c **** *  None
 227:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 6


 228:Generated_Source\PSoC4/PWM.c **** * Side Effects:
 229:Generated_Source\PSoC4/PWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC4/PWM.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC4/PWM.c **** *
 232:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void) 
 234:Generated_Source\PSoC4/PWM.c **** {
  59              		.loc 1 234 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
 235:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseControl || PWM_UsingFixedFunction)
 236:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL &= ((uint8)(~PWM_CTRL_ENABLE));
  64              		.loc 1 236 0
  65 0000 024A     		ldr	r2, .L5
  66 0002 1178     		ldrb	r1, [r2]
  67 0004 7F23     		movs	r3, #127
  68 0006 0B40     		ands	r3, r1
  69 0008 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseControl || PWM_UsingFixedFunction) */
 238:Generated_Source\PSoC4/PWM.c **** 
 239:Generated_Source\PSoC4/PWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
 241:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_ENABLE &= ((uint8)(~PWM_BLOCK_EN_MASK));
 242:Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 244:Generated_Source\PSoC4/PWM.c **** }
  70              		.loc 1 244 0
  71              		@ sp needed
  72 000a 7047     		bx	lr
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 000c 72000F40 		.word	1074724978
  77              		.cfi_endproc
  78              	.LFE4:
  79              		.size	PWM_Stop, .-PWM_Stop
  80              		.section	.text.PWM_SetCompareMode,"ax",%progbits
  81              		.align	2
  82              		.global	PWM_SetCompareMode
  83              		.code	16
  84              		.thumb_func
  85              		.type	PWM_SetCompareMode, %function
  86              	PWM_SetCompareMode:
  87              	.LFB5:
 245:Generated_Source\PSoC4/PWM.c **** 
 246:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseOneCompareMode)
 247:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CompareMode1SW)
 248:Generated_Source\PSoC4/PWM.c **** 
 249:Generated_Source\PSoC4/PWM.c **** 
 250:Generated_Source\PSoC4/PWM.c ****         /*******************************************************************************
 251:Generated_Source\PSoC4/PWM.c ****         * Function Name: PWM_SetCompareMode
 252:Generated_Source\PSoC4/PWM.c ****         ********************************************************************************
 253:Generated_Source\PSoC4/PWM.c ****         *
 254:Generated_Source\PSoC4/PWM.c ****         * Summary:
 255:Generated_Source\PSoC4/PWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 7


 256:Generated_Source\PSoC4/PWM.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC4/PWM.c ****         *
 258:Generated_Source\PSoC4/PWM.c ****         * Parameters:
 259:Generated_Source\PSoC4/PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC4/PWM.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC4/PWM.c ****         *
 262:Generated_Source\PSoC4/PWM.c ****         * Return:
 263:Generated_Source\PSoC4/PWM.c ****         *  None
 264:Generated_Source\PSoC4/PWM.c ****         *
 265:Generated_Source\PSoC4/PWM.c ****         *******************************************************************************/
 266:Generated_Source\PSoC4/PWM.c ****         void PWM_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC4/PWM.c ****         {
  88              		.loc 1 267 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              	.LVL0:
  93 0000 10B5     		push	{r4, lr}
  94              		.cfi_def_cfa_offset 8
  95              		.cfi_offset 4, -8
  96              		.cfi_offset 14, -4
  97 0002 0300     		movs	r3, r0
 268:Generated_Source\PSoC4/PWM.c ****             #if(PWM_UsingFixedFunction)
 269:Generated_Source\PSoC4/PWM.c **** 
 270:Generated_Source\PSoC4/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHIF
 272:Generated_Source\PSoC4/PWM.c ****                 #else
 273:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC4/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC4/PWM.c **** 
 276:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL3 &= ((uint8)(~PWM_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC4/PWM.c **** 
 279:Generated_Source\PSoC4/PWM.c ****             #elif (PWM_UseControl)
 280:Generated_Source\PSoC4/PWM.c **** 
 281:Generated_Source\PSoC4/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHI
 283:Generated_Source\PSoC4/PWM.c ****                                                 PWM_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC4/PWM.c ****                 #else
 285:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode1masked = comparemode & PWM_CTRL_CMPMODE1_MASK;
  98              		.loc 1 285 0
  99 0004 0720     		movs	r0, #7
 100              	.LVL1:
 101 0006 1840     		ands	r0, r3
 102              	.LVL2:
 286:Generated_Source\PSoC4/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC4/PWM.c **** 
 288:Generated_Source\PSoC4/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE2_SHI
 103              		.loc 1 289 0
 104 0008 DB00     		lsls	r3, r3, #3
 105 000a 3822     		movs	r2, #56
 106 000c 1340     		ands	r3, r2
 107              	.LVL3:
 290:Generated_Source\PSoC4/PWM.c ****                                                PWM_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC4/PWM.c ****                 #else
 292:Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode2masked = comparemode & PWM_CTRL_CMPMODE2_MASK;
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 8


 293:Generated_Source\PSoC4/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC4/PWM.c **** 
 295:Generated_Source\PSoC4/PWM.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL &= ((uint8)(~(PWM_CTRL_CMPMODE1_MASK |
 108              		.loc 1 296 0
 109 000e 054A     		ldr	r2, .L8
 110 0010 1178     		ldrb	r1, [r2]
 111 0012 3F24     		movs	r4, #63
 112 0014 A143     		bics	r1, r4
 113 0016 1170     		strb	r1, [r2]
 297:Generated_Source\PSoC4/PWM.c ****                                             PWM_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL |= (comparemode1masked | comparemode2masked);
 114              		.loc 1 298 0
 115 0018 1178     		ldrb	r1, [r2]
 116 001a 1843     		orrs	r0, r3
 117              	.LVL4:
 118 001c 0843     		orrs	r0, r1
 119 001e 1070     		strb	r0, [r2]
 299:Generated_Source\PSoC4/PWM.c **** 
 300:Generated_Source\PSoC4/PWM.c ****             #else
 301:Generated_Source\PSoC4/PWM.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_UsingFixedFunction) */
 303:Generated_Source\PSoC4/PWM.c ****         }
 120              		.loc 1 303 0
 121              		@ sp needed
 122 0020 10BD     		pop	{r4, pc}
 123              	.L9:
 124 0022 C046     		.align	2
 125              	.L8:
 126 0024 72000F40 		.word	1074724978
 127              		.cfi_endproc
 128              	.LFE5:
 129              		.size	PWM_SetCompareMode, .-PWM_SetCompareMode
 130              		.section	.text.PWM_WriteCounter,"ax",%progbits
 131              		.align	2
 132              		.global	PWM_WriteCounter
 133              		.code	16
 134              		.thumb_func
 135              		.type	PWM_WriteCounter, %function
 136              	PWM_WriteCounter:
 137              	.LFB6:
 304:Generated_Source\PSoC4/PWM.c ****     #endif /* PWM_CompareMode1SW */
 305:Generated_Source\PSoC4/PWM.c **** 
 306:Generated_Source\PSoC4/PWM.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC4/PWM.c **** 
 308:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CompareMode1SW)
 309:Generated_Source\PSoC4/PWM.c **** 
 310:Generated_Source\PSoC4/PWM.c **** 
 311:Generated_Source\PSoC4/PWM.c ****         /*******************************************************************************
 312:Generated_Source\PSoC4/PWM.c ****         * Function Name: PWM_SetCompareMode1
 313:Generated_Source\PSoC4/PWM.c ****         ********************************************************************************
 314:Generated_Source\PSoC4/PWM.c ****         *
 315:Generated_Source\PSoC4/PWM.c ****         * Summary:
 316:Generated_Source\PSoC4/PWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC4/PWM.c ****         *
 318:Generated_Source\PSoC4/PWM.c ****         * Parameters:
 319:Generated_Source\PSoC4/PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 9


 320:Generated_Source\PSoC4/PWM.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC4/PWM.c ****         *
 322:Generated_Source\PSoC4/PWM.c ****         * Return:
 323:Generated_Source\PSoC4/PWM.c ****         *  None
 324:Generated_Source\PSoC4/PWM.c ****         *
 325:Generated_Source\PSoC4/PWM.c ****         *******************************************************************************/
 326:Generated_Source\PSoC4/PWM.c ****         void PWM_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC4/PWM.c ****         {
 328:Generated_Source\PSoC4/PWM.c ****             #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC4/PWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHIFT)) 
 330:Generated_Source\PSoC4/PWM.c ****                                            PWM_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC4/PWM.c ****             #else
 332:Generated_Source\PSoC4/PWM.c ****                 uint8 comparemodemasked = comparemode & PWM_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC4/PWM.c ****             #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC4/PWM.c **** 
 335:Generated_Source\PSoC4/PWM.c ****             #if (PWM_UseControl)
 336:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL &= ((uint8)(~PWM_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_UseControl) */
 339:Generated_Source\PSoC4/PWM.c ****         }
 340:Generated_Source\PSoC4/PWM.c ****     #endif /* PWM_CompareMode1SW */
 341:Generated_Source\PSoC4/PWM.c **** 
 342:Generated_Source\PSoC4/PWM.c **** #if (PWM_CompareMode2SW)
 343:Generated_Source\PSoC4/PWM.c **** 
 344:Generated_Source\PSoC4/PWM.c **** 
 345:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 346:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_SetCompareMode2
 347:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 348:Generated_Source\PSoC4/PWM.c ****     *
 349:Generated_Source\PSoC4/PWM.c ****     * Summary:
 350:Generated_Source\PSoC4/PWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC4/PWM.c ****     *
 352:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 353:Generated_Source\PSoC4/PWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC4/PWM.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC4/PWM.c ****     *
 356:Generated_Source\PSoC4/PWM.c ****     * Return:
 357:Generated_Source\PSoC4/PWM.c ****     *  None
 358:Generated_Source\PSoC4/PWM.c ****     *
 359:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/PWM.c ****     void PWM_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC4/PWM.c ****     {
 362:Generated_Source\PSoC4/PWM.c **** 
 363:Generated_Source\PSoC4/PWM.c ****         #if(0 != PWM_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC4/PWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC4/PWM.c ****                                                  PWM_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC4/PWM.c ****         #else
 367:Generated_Source\PSoC4/PWM.c ****             uint8 comparemodemasked = comparemode & PWM_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC4/PWM.c ****         #endif /* (0 != PWM_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC4/PWM.c **** 
 370:Generated_Source\PSoC4/PWM.c ****         #if (PWM_UseControl)
 371:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL &= ((uint8)(~PWM_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseControl) */
 374:Generated_Source\PSoC4/PWM.c ****     }
 375:Generated_Source\PSoC4/PWM.c ****     #endif /*PWM_CompareMode2SW */
 376:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 10


 377:Generated_Source\PSoC4/PWM.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC4/PWM.c **** 
 379:Generated_Source\PSoC4/PWM.c **** 
 380:Generated_Source\PSoC4/PWM.c **** #if (!PWM_UsingFixedFunction)
 381:Generated_Source\PSoC4/PWM.c **** 
 382:Generated_Source\PSoC4/PWM.c **** 
 383:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 384:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCounter
 385:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 386:Generated_Source\PSoC4/PWM.c ****     *
 387:Generated_Source\PSoC4/PWM.c ****     * Summary:
 388:Generated_Source\PSoC4/PWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC4/PWM.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC4/PWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC4/PWM.c ****     *  PWM implementation.
 392:Generated_Source\PSoC4/PWM.c ****     *
 393:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 394:Generated_Source\PSoC4/PWM.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC4/PWM.c ****     *
 396:Generated_Source\PSoC4/PWM.c ****     * Return:
 397:Generated_Source\PSoC4/PWM.c ****     *  None
 398:Generated_Source\PSoC4/PWM.c ****     *
 399:Generated_Source\PSoC4/PWM.c ****     * Side Effects:
 400:Generated_Source\PSoC4/PWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC4/PWM.c ****     *
 402:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 403:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC4/PWM.c ****                                        
 405:Generated_Source\PSoC4/PWM.c ****     {
 138              		.loc 1 405 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              		@ link register save eliminated.
 143              	.LVL5:
 406:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG16(PWM_COUNTER_LSB_PTR, counter);
 144              		.loc 1 406 0
 145 0000 014B     		ldr	r3, .L11
 146 0002 1880     		strh	r0, [r3]
 407:Generated_Source\PSoC4/PWM.c ****     }
 147              		.loc 1 407 0
 148              		@ sp needed
 149 0004 7047     		bx	lr
 150              	.L12:
 151 0006 C046     		.align	2
 152              	.L11:
 153 0008 04100F40 		.word	1074728964
 154              		.cfi_endproc
 155              	.LFE6:
 156              		.size	PWM_WriteCounter, .-PWM_WriteCounter
 157              		.section	.text.PWM_ReadCounter,"ax",%progbits
 158              		.align	2
 159              		.global	PWM_ReadCounter
 160              		.code	16
 161              		.thumb_func
 162              		.type	PWM_ReadCounter, %function
 163              	PWM_ReadCounter:
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 11


 164              	.LFB7:
 408:Generated_Source\PSoC4/PWM.c **** 
 409:Generated_Source\PSoC4/PWM.c **** 
 410:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 411:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCounter
 412:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 413:Generated_Source\PSoC4/PWM.c ****     *
 414:Generated_Source\PSoC4/PWM.c ****     * Summary:
 415:Generated_Source\PSoC4/PWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC4/PWM.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC4/PWM.c ****     *
 418:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 419:Generated_Source\PSoC4/PWM.c ****     *  None
 420:Generated_Source\PSoC4/PWM.c ****     *
 421:Generated_Source\PSoC4/PWM.c ****     * Return:
 422:Generated_Source\PSoC4/PWM.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC4/PWM.c ****     *
 424:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 425:Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCounter(void) 
 426:Generated_Source\PSoC4/PWM.c ****     {
 165              		.loc 1 426 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 427:Generated_Source\PSoC4/PWM.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC4/PWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC4/PWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC4/PWM.c ****           (void)CY_GET_REG8(PWM_COUNTERCAP_LSB_PTR_8BIT);
 170              		.loc 1 430 0
 171 0000 024B     		ldr	r3, .L14
 172 0002 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC4/PWM.c **** 
 432:Generated_Source\PSoC4/PWM.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_CAPTURE_LSB_PTR));
 173              		.loc 1 433 0
 174 0004 024B     		ldr	r3, .L14+4
 175 0006 1888     		ldrh	r0, [r3]
 176 0008 80B2     		uxth	r0, r0
 434:Generated_Source\PSoC4/PWM.c ****     }
 177              		.loc 1 434 0
 178              		@ sp needed
 179 000a 7047     		bx	lr
 180              	.L15:
 181              		.align	2
 182              	.L14:
 183 000c 12000F40 		.word	1074724882
 184 0010 A4100F40 		.word	1074729124
 185              		.cfi_endproc
 186              	.LFE7:
 187              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 188              		.section	.text.PWM_WritePeriod,"ax",%progbits
 189              		.align	2
 190              		.global	PWM_WritePeriod
 191              		.code	16
 192              		.thumb_func
 193              		.type	PWM_WritePeriod, %function
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 12


 194              	PWM_WritePeriod:
 195              	.LFB9:
 435:Generated_Source\PSoC4/PWM.c **** 
 436:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseStatus)
 437:Generated_Source\PSoC4/PWM.c **** 
 438:Generated_Source\PSoC4/PWM.c **** 
 439:Generated_Source\PSoC4/PWM.c ****         /*******************************************************************************
 440:Generated_Source\PSoC4/PWM.c ****         * Function Name: PWM_ClearFIFO
 441:Generated_Source\PSoC4/PWM.c ****         ********************************************************************************
 442:Generated_Source\PSoC4/PWM.c ****         *
 443:Generated_Source\PSoC4/PWM.c ****         * Summary:
 444:Generated_Source\PSoC4/PWM.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC4/PWM.c ****         *
 446:Generated_Source\PSoC4/PWM.c ****         * Parameters:
 447:Generated_Source\PSoC4/PWM.c ****         *  None
 448:Generated_Source\PSoC4/PWM.c ****         *
 449:Generated_Source\PSoC4/PWM.c ****         * Return:
 450:Generated_Source\PSoC4/PWM.c ****         *  None
 451:Generated_Source\PSoC4/PWM.c ****         *
 452:Generated_Source\PSoC4/PWM.c ****         *******************************************************************************/
 453:Generated_Source\PSoC4/PWM.c ****         void PWM_ClearFIFO(void) 
 454:Generated_Source\PSoC4/PWM.c ****         {
 455:Generated_Source\PSoC4/PWM.c ****             while(0u != (PWM_ReadStatusRegister() & PWM_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC4/PWM.c ****             {
 457:Generated_Source\PSoC4/PWM.c ****                 (void)PWM_ReadCapture();
 458:Generated_Source\PSoC4/PWM.c ****             }
 459:Generated_Source\PSoC4/PWM.c ****         }
 460:Generated_Source\PSoC4/PWM.c **** 
 461:Generated_Source\PSoC4/PWM.c ****     #endif /* PWM_UseStatus */
 462:Generated_Source\PSoC4/PWM.c **** 
 463:Generated_Source\PSoC4/PWM.c **** #endif /* !PWM_UsingFixedFunction */
 464:Generated_Source\PSoC4/PWM.c **** 
 465:Generated_Source\PSoC4/PWM.c **** 
 466:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 468:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 469:Generated_Source\PSoC4/PWM.c **** *
 470:Generated_Source\PSoC4/PWM.c **** * Summary:
 471:Generated_Source\PSoC4/PWM.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC4/PWM.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC4/PWM.c **** *
 474:Generated_Source\PSoC4/PWM.c **** * Parameters:
 475:Generated_Source\PSoC4/PWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC4/PWM.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC4/PWM.c **** *
 478:Generated_Source\PSoC4/PWM.c **** * Return:
 479:Generated_Source\PSoC4/PWM.c **** *  None
 480:Generated_Source\PSoC4/PWM.c **** *
 481:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 482:Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC4/PWM.c **** {
 196              		.loc 1 483 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL6:
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 13


 484:Generated_Source\PSoC4/PWM.c ****     #if(PWM_UsingFixedFunction)
 485:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG16(PWM_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC4/PWM.c ****     #else
 487:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG16(PWM_PERIOD_LSB_PTR, period);
 202              		.loc 1 487 0
 203 0000 014B     		ldr	r3, .L17
 204 0002 1880     		strh	r0, [r3]
 488:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 489:Generated_Source\PSoC4/PWM.c **** }
 205              		.loc 1 489 0
 206              		@ sp needed
 207 0004 7047     		bx	lr
 208              	.L18:
 209 0006 C046     		.align	2
 210              	.L17:
 211 0008 84100F40 		.word	1074729092
 212              		.cfi_endproc
 213              	.LFE9:
 214              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 215              		.section	.text.PWM_WriteCompare,"ax",%progbits
 216              		.align	2
 217              		.global	PWM_WriteCompare
 218              		.code	16
 219              		.thumb_func
 220              		.type	PWM_WriteCompare, %function
 221              	PWM_WriteCompare:
 222              	.LFB10:
 490:Generated_Source\PSoC4/PWM.c **** 
 491:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseOneCompareMode)
 492:Generated_Source\PSoC4/PWM.c **** 
 493:Generated_Source\PSoC4/PWM.c **** 
 494:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 495:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCompare
 496:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 497:Generated_Source\PSoC4/PWM.c ****     *
 498:Generated_Source\PSoC4/PWM.c ****     * Summary:
 499:Generated_Source\PSoC4/PWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC4/PWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC4/PWM.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC4/PWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC4/PWM.c ****     *  Dither Mode.
 504:Generated_Source\PSoC4/PWM.c ****     *
 505:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 506:Generated_Source\PSoC4/PWM.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC4/PWM.c ****     *
 508:Generated_Source\PSoC4/PWM.c ****     * Return:
 509:Generated_Source\PSoC4/PWM.c ****     *  None
 510:Generated_Source\PSoC4/PWM.c ****     *
 511:Generated_Source\PSoC4/PWM.c ****     * Side Effects:
 512:Generated_Source\PSoC4/PWM.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC4/PWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC4/PWM.c ****     *
 515:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 516:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC4/PWM.c ****                                        
 518:Generated_Source\PSoC4/PWM.c ****     {
 223              		.loc 1 518 0
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 14


 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 228              	.LVL7:
 519:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 520:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC4/PWM.c ****         #else
 522:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, compare);
 229              		.loc 1 522 0
 230 0000 014B     		ldr	r3, .L20
 231 0002 1880     		strh	r0, [r3]
 523:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 524:Generated_Source\PSoC4/PWM.c **** 
 525:Generated_Source\PSoC4/PWM.c ****         #if (PWM_PWMMode == PWM__B_PWM__DITHER)
 526:Generated_Source\PSoC4/PWM.c ****             #if(PWM_UsingFixedFunction)
 527:Generated_Source\PSoC4/PWM.c ****                 CY_SET_REG16(PWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC4/PWM.c ****             #else
 529:Generated_Source\PSoC4/PWM.c ****                 CY_SET_REG16(PWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_UsingFixedFunction) */
 531:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_PWMMode == PWM__B_PWM__DITHER) */
 532:Generated_Source\PSoC4/PWM.c ****     }
 232              		.loc 1 532 0
 233              		@ sp needed
 234 0004 7047     		bx	lr
 235              	.L21:
 236 0006 C046     		.align	2
 237              	.L20:
 238 0008 44100F40 		.word	1074729028
 239              		.cfi_endproc
 240              	.LFE10:
 241              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 242              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 243              		.align	2
 244              		.global	PWM_SetInterruptMode
 245              		.code	16
 246              		.thumb_func
 247              		.type	PWM_SetInterruptMode, %function
 248              	PWM_SetInterruptMode:
 249              	.LFB11:
 533:Generated_Source\PSoC4/PWM.c **** 
 534:Generated_Source\PSoC4/PWM.c **** 
 535:Generated_Source\PSoC4/PWM.c **** #else
 536:Generated_Source\PSoC4/PWM.c **** 
 537:Generated_Source\PSoC4/PWM.c **** 
 538:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 539:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCompare1
 540:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 541:Generated_Source\PSoC4/PWM.c ****     *
 542:Generated_Source\PSoC4/PWM.c ****     * Summary:
 543:Generated_Source\PSoC4/PWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC4/PWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC4/PWM.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC4/PWM.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC4/PWM.c ****     *
 548:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 549:Generated_Source\PSoC4/PWM.c ****     *  compare:  New compare value.
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 15


 550:Generated_Source\PSoC4/PWM.c ****     *
 551:Generated_Source\PSoC4/PWM.c ****     * Return:
 552:Generated_Source\PSoC4/PWM.c ****     *  None
 553:Generated_Source\PSoC4/PWM.c ****     *
 554:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 555:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC4/PWM.c ****                                         
 557:Generated_Source\PSoC4/PWM.c ****     {
 558:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 559:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC4/PWM.c ****         #else
 561:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 563:Generated_Source\PSoC4/PWM.c ****     }
 564:Generated_Source\PSoC4/PWM.c **** 
 565:Generated_Source\PSoC4/PWM.c **** 
 566:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 567:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCompare2
 568:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 569:Generated_Source\PSoC4/PWM.c ****     *
 570:Generated_Source\PSoC4/PWM.c ****     * Summary:
 571:Generated_Source\PSoC4/PWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC4/PWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC4/PWM.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC4/PWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC4/PWM.c ****     *  mode.
 576:Generated_Source\PSoC4/PWM.c ****     *
 577:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 578:Generated_Source\PSoC4/PWM.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC4/PWM.c ****     *
 580:Generated_Source\PSoC4/PWM.c ****     * Return:
 581:Generated_Source\PSoC4/PWM.c ****     *  None
 582:Generated_Source\PSoC4/PWM.c ****     *
 583:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 584:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC4/PWM.c ****                                         
 586:Generated_Source\PSoC4/PWM.c ****     {
 587:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 588:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC4/PWM.c ****         #else
 590:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 592:Generated_Source\PSoC4/PWM.c ****     }
 593:Generated_Source\PSoC4/PWM.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC4/PWM.c **** 
 595:Generated_Source\PSoC4/PWM.c **** #if (PWM_DeadBandUsed)
 596:Generated_Source\PSoC4/PWM.c **** 
 597:Generated_Source\PSoC4/PWM.c **** 
 598:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 599:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteDeadTime
 600:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 601:Generated_Source\PSoC4/PWM.c ****     *
 602:Generated_Source\PSoC4/PWM.c ****     * Summary:
 603:Generated_Source\PSoC4/PWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC4/PWM.c ****     *
 605:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 606:Generated_Source\PSoC4/PWM.c ****     *  deadtime:  Number of counts for dead time
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 16


 607:Generated_Source\PSoC4/PWM.c ****     *
 608:Generated_Source\PSoC4/PWM.c ****     * Return:
 609:Generated_Source\PSoC4/PWM.c ****     *  None
 610:Generated_Source\PSoC4/PWM.c ****     *
 611:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 612:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC4/PWM.c ****     {
 614:Generated_Source\PSoC4/PWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC4/PWM.c ****         #if(!PWM_DeadBand2_4)
 616:Generated_Source\PSoC4/PWM.c ****             CY_SET_REG8(PWM_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC4/PWM.c ****         #else
 618:Generated_Source\PSoC4/PWM.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC4/PWM.c ****             /* Clear existing data */
 620:Generated_Source\PSoC4/PWM.c ****             PWM_DEADBAND_COUNT &= ((uint8)(~PWM_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC4/PWM.c **** 
 622:Generated_Source\PSoC4/PWM.c ****             /* Set new dead time */
 623:Generated_Source\PSoC4/PWM.c ****             #if(PWM_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC4/PWM.c ****                 PWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC4/PWM.c ****                                                     PWM_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC4/PWM.c ****             #else
 627:Generated_Source\PSoC4/PWM.c ****                 PWM_DEADBAND_COUNT |= deadtime & PWM_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC4/PWM.c **** 
 630:Generated_Source\PSoC4/PWM.c ****         #endif /* (!PWM_DeadBand2_4) */
 631:Generated_Source\PSoC4/PWM.c ****     }
 632:Generated_Source\PSoC4/PWM.c **** 
 633:Generated_Source\PSoC4/PWM.c **** 
 634:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 635:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadDeadTime
 636:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 637:Generated_Source\PSoC4/PWM.c ****     *
 638:Generated_Source\PSoC4/PWM.c ****     * Summary:
 639:Generated_Source\PSoC4/PWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC4/PWM.c ****     *
 641:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 642:Generated_Source\PSoC4/PWM.c ****     *  None
 643:Generated_Source\PSoC4/PWM.c ****     *
 644:Generated_Source\PSoC4/PWM.c ****     * Return:
 645:Generated_Source\PSoC4/PWM.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC4/PWM.c ****     *
 647:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 648:Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadDeadTime(void) 
 649:Generated_Source\PSoC4/PWM.c ****     {
 650:Generated_Source\PSoC4/PWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC4/PWM.c ****         #if(!PWM_DeadBand2_4)
 652:Generated_Source\PSoC4/PWM.c ****             return (CY_GET_REG8(PWM_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC4/PWM.c ****         #else
 654:Generated_Source\PSoC4/PWM.c **** 
 655:Generated_Source\PSoC4/PWM.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC4/PWM.c ****             #if(PWM_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC4/PWM.c ****                 return ((uint8)(((uint8)(PWM_DEADBAND_COUNT & PWM_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC4/PWM.c ****                                                                            PWM_DEADBAND_COUNT_SHIFT
 659:Generated_Source\PSoC4/PWM.c ****             #else
 660:Generated_Source\PSoC4/PWM.c ****                 return (PWM_DEADBAND_COUNT & PWM_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC4/PWM.c ****         #endif /* (!PWM_DeadBand2_4) */
 663:Generated_Source\PSoC4/PWM.c ****     }
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 17


 664:Generated_Source\PSoC4/PWM.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC4/PWM.c **** 
 666:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseStatus || PWM_UsingFixedFunction)
 667:Generated_Source\PSoC4/PWM.c **** 
 668:Generated_Source\PSoC4/PWM.c **** 
 669:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_SetInterruptMode
 671:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/PWM.c ****     *
 673:Generated_Source\PSoC4/PWM.c ****     * Summary:
 674:Generated_Source\PSoC4/PWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC4/PWM.c ****     *  source status register.
 676:Generated_Source\PSoC4/PWM.c ****     *
 677:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 678:Generated_Source\PSoC4/PWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC4/PWM.c ****     *
 680:Generated_Source\PSoC4/PWM.c ****     * Return:
 681:Generated_Source\PSoC4/PWM.c ****     *  None
 682:Generated_Source\PSoC4/PWM.c ****     *
 683:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 684:Generated_Source\PSoC4/PWM.c ****     void PWM_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC4/PWM.c ****     {
 250              		.loc 1 685 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 255              	.LVL8:
 686:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG8(PWM_STATUS_MASK_PTR, interruptMode);
 256              		.loc 1 686 0
 257 0000 014B     		ldr	r3, .L23
 258 0002 1870     		strb	r0, [r3]
 687:Generated_Source\PSoC4/PWM.c ****     }
 259              		.loc 1 687 0
 260              		@ sp needed
 261 0004 7047     		bx	lr
 262              	.L24:
 263 0006 C046     		.align	2
 264              	.L23:
 265 0008 83000F40 		.word	1074724995
 266              		.cfi_endproc
 267              	.LFE11:
 268              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 269              		.section	.text.PWM_ReadStatusRegister,"ax",%progbits
 270              		.align	2
 271              		.global	PWM_ReadStatusRegister
 272              		.code	16
 273              		.thumb_func
 274              		.type	PWM_ReadStatusRegister, %function
 275              	PWM_ReadStatusRegister:
 276              	.LFB12:
 688:Generated_Source\PSoC4/PWM.c **** 
 689:Generated_Source\PSoC4/PWM.c **** 
 690:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 691:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadStatusRegister
 692:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 693:Generated_Source\PSoC4/PWM.c ****     *
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 18


 694:Generated_Source\PSoC4/PWM.c ****     * Summary:
 695:Generated_Source\PSoC4/PWM.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC4/PWM.c ****     *
 697:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 698:Generated_Source\PSoC4/PWM.c ****     *  None
 699:Generated_Source\PSoC4/PWM.c ****     *
 700:Generated_Source\PSoC4/PWM.c ****     * Return:
 701:Generated_Source\PSoC4/PWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC4/PWM.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC4/PWM.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC4/PWM.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC4/PWM.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC4/PWM.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC4/PWM.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC4/PWM.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC4/PWM.c ****     *
 710:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 711:Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadStatusRegister(void) 
 712:Generated_Source\PSoC4/PWM.c ****     {
 277              		.loc 1 712 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              		@ link register save eliminated.
 713:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG8(PWM_STATUS_PTR));
 282              		.loc 1 713 0
 283 0000 014B     		ldr	r3, .L26
 284 0002 1878     		ldrb	r0, [r3]
 285 0004 C0B2     		uxtb	r0, r0
 714:Generated_Source\PSoC4/PWM.c ****     }
 286              		.loc 1 714 0
 287              		@ sp needed
 288 0006 7047     		bx	lr
 289              	.L27:
 290              		.align	2
 291              	.L26:
 292 0008 63000F40 		.word	1074724963
 293              		.cfi_endproc
 294              	.LFE12:
 295              		.size	PWM_ReadStatusRegister, .-PWM_ReadStatusRegister
 296              		.section	.text.PWM_ReadControlRegister,"ax",%progbits
 297              		.align	2
 298              		.global	PWM_ReadControlRegister
 299              		.code	16
 300              		.thumb_func
 301              		.type	PWM_ReadControlRegister, %function
 302              	PWM_ReadControlRegister:
 303              	.LFB13:
 715:Generated_Source\PSoC4/PWM.c **** 
 716:Generated_Source\PSoC4/PWM.c **** #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
 717:Generated_Source\PSoC4/PWM.c **** 
 718:Generated_Source\PSoC4/PWM.c **** 
 719:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseControl)
 720:Generated_Source\PSoC4/PWM.c **** 
 721:Generated_Source\PSoC4/PWM.c **** 
 722:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 723:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadControlRegister
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 19


 724:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 725:Generated_Source\PSoC4/PWM.c ****     *
 726:Generated_Source\PSoC4/PWM.c ****     * Summary:
 727:Generated_Source\PSoC4/PWM.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC4/PWM.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC4/PWM.c ****     *
 730:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 731:Generated_Source\PSoC4/PWM.c ****     *  None
 732:Generated_Source\PSoC4/PWM.c ****     *
 733:Generated_Source\PSoC4/PWM.c ****     * Return:
 734:Generated_Source\PSoC4/PWM.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC4/PWM.c ****     *
 736:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 737:Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadControlRegister(void) 
 738:Generated_Source\PSoC4/PWM.c ****     {
 304              		.loc 1 738 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 739:Generated_Source\PSoC4/PWM.c ****         uint8 result;
 740:Generated_Source\PSoC4/PWM.c **** 
 741:Generated_Source\PSoC4/PWM.c ****         result = CY_GET_REG8(PWM_CONTROL_PTR);
 309              		.loc 1 741 0
 310 0000 014B     		ldr	r3, .L29
 311 0002 1878     		ldrb	r0, [r3]
 312 0004 C0B2     		uxtb	r0, r0
 313              	.LVL9:
 742:Generated_Source\PSoC4/PWM.c ****         return (result);
 743:Generated_Source\PSoC4/PWM.c ****     }
 314              		.loc 1 743 0
 315              		@ sp needed
 316 0006 7047     		bx	lr
 317              	.L30:
 318              		.align	2
 319              	.L29:
 320 0008 72000F40 		.word	1074724978
 321              		.cfi_endproc
 322              	.LFE13:
 323              		.size	PWM_ReadControlRegister, .-PWM_ReadControlRegister
 324              		.section	.text.PWM_WriteControlRegister,"ax",%progbits
 325              		.align	2
 326              		.global	PWM_WriteControlRegister
 327              		.code	16
 328              		.thumb_func
 329              		.type	PWM_WriteControlRegister, %function
 330              	PWM_WriteControlRegister:
 331              	.LFB14:
 744:Generated_Source\PSoC4/PWM.c **** 
 745:Generated_Source\PSoC4/PWM.c **** 
 746:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 747:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteControlRegister
 748:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 749:Generated_Source\PSoC4/PWM.c ****     *
 750:Generated_Source\PSoC4/PWM.c ****     * Summary:
 751:Generated_Source\PSoC4/PWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC4/PWM.c ****     *  the control register is not removed.
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 20


 753:Generated_Source\PSoC4/PWM.c ****     *
 754:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 755:Generated_Source\PSoC4/PWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC4/PWM.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC4/PWM.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC4/PWM.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC4/PWM.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC4/PWM.c ****     *
 761:Generated_Source\PSoC4/PWM.c ****     * Return:
 762:Generated_Source\PSoC4/PWM.c ****     *  None
 763:Generated_Source\PSoC4/PWM.c ****     *
 764:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 765:Generated_Source\PSoC4/PWM.c ****     void PWM_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC4/PWM.c ****     {
 332              		.loc 1 766 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 337              	.LVL10:
 767:Generated_Source\PSoC4/PWM.c ****         CY_SET_REG8(PWM_CONTROL_PTR, control);
 338              		.loc 1 767 0
 339 0000 014B     		ldr	r3, .L32
 340 0002 1870     		strb	r0, [r3]
 768:Generated_Source\PSoC4/PWM.c ****     }
 341              		.loc 1 768 0
 342              		@ sp needed
 343 0004 7047     		bx	lr
 344              	.L33:
 345 0006 C046     		.align	2
 346              	.L32:
 347 0008 72000F40 		.word	1074724978
 348              		.cfi_endproc
 349              	.LFE14:
 350              		.size	PWM_WriteControlRegister, .-PWM_WriteControlRegister
 351              		.section	.text.PWM_ReadCapture,"ax",%progbits
 352              		.align	2
 353              		.global	PWM_ReadCapture
 354              		.code	16
 355              		.thumb_func
 356              		.type	PWM_ReadCapture, %function
 357              	PWM_ReadCapture:
 358              	.LFB15:
 769:Generated_Source\PSoC4/PWM.c **** 
 770:Generated_Source\PSoC4/PWM.c **** #endif /* (PWM_UseControl) */
 771:Generated_Source\PSoC4/PWM.c **** 
 772:Generated_Source\PSoC4/PWM.c **** 
 773:Generated_Source\PSoC4/PWM.c **** #if (!PWM_UsingFixedFunction)
 774:Generated_Source\PSoC4/PWM.c **** 
 775:Generated_Source\PSoC4/PWM.c **** 
 776:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 777:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCapture
 778:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 779:Generated_Source\PSoC4/PWM.c ****     *
 780:Generated_Source\PSoC4/PWM.c ****     * Summary:
 781:Generated_Source\PSoC4/PWM.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC4/PWM.c ****     *
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 21


 783:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 784:Generated_Source\PSoC4/PWM.c ****     *  None
 785:Generated_Source\PSoC4/PWM.c ****     *
 786:Generated_Source\PSoC4/PWM.c ****     * Return:
 787:Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC4/PWM.c ****     *
 789:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 790:Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCapture(void) 
 791:Generated_Source\PSoC4/PWM.c ****     {
 359              		.loc 1 791 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
 792:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_CAPTURE_LSB_PTR));
 364              		.loc 1 792 0
 365 0000 014B     		ldr	r3, .L35
 366 0002 1888     		ldrh	r0, [r3]
 367 0004 80B2     		uxth	r0, r0
 793:Generated_Source\PSoC4/PWM.c ****     }
 368              		.loc 1 793 0
 369              		@ sp needed
 370 0006 7047     		bx	lr
 371              	.L36:
 372              		.align	2
 373              	.L35:
 374 0008 A4100F40 		.word	1074729124
 375              		.cfi_endproc
 376              	.LFE15:
 377              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 378              		.section	.text.PWM_ClearFIFO,"ax",%progbits
 379              		.align	2
 380              		.global	PWM_ClearFIFO
 381              		.code	16
 382              		.thumb_func
 383              		.type	PWM_ClearFIFO, %function
 384              	PWM_ClearFIFO:
 385              	.LFB8:
 454:Generated_Source\PSoC4/PWM.c ****             while(0u != (PWM_ReadStatusRegister() & PWM_STATUS_FIFONEMPTY))
 386              		.loc 1 454 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390 0000 10B5     		push	{r4, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 4, -8
 393              		.cfi_offset 14, -4
 455:Generated_Source\PSoC4/PWM.c ****             {
 394              		.loc 1 455 0
 395 0002 01E0     		b	.L38
 396              	.L39:
 457:Generated_Source\PSoC4/PWM.c ****             }
 397              		.loc 1 457 0
 398 0004 FFF7FEFF 		bl	PWM_ReadCapture
 399              	.LVL11:
 400              	.L38:
 455:Generated_Source\PSoC4/PWM.c ****             {
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 22


 401              		.loc 1 455 0
 402 0008 FFF7FEFF 		bl	PWM_ReadStatusRegister
 403              	.LVL12:
 404 000c C306     		lsls	r3, r0, #27
 405 000e F9D4     		bmi	.L39
 459:Generated_Source\PSoC4/PWM.c **** 
 406              		.loc 1 459 0
 407              		@ sp needed
 408 0010 10BD     		pop	{r4, pc}
 409              		.cfi_endproc
 410              	.LFE8:
 411              		.size	PWM_ClearFIFO, .-PWM_ClearFIFO
 412 0012 C046     		.section	.text.PWM_Init,"ax",%progbits
 413              		.align	2
 414              		.global	PWM_Init
 415              		.code	16
 416              		.thumb_func
 417              		.type	PWM_Init, %function
 418              	PWM_Init:
 419              	.LFB2:
  85:Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction || PWM_UseControl)
 420              		.loc 1 85 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424 0000 70B5     		push	{r4, r5, r6, lr}
 425              		.cfi_def_cfa_offset 16
 426              		.cfi_offset 4, -16
 427              		.cfi_offset 5, -12
 428              		.cfi_offset 6, -8
 429              		.cfi_offset 14, -4
 117:Generated_Source\PSoC4/PWM.c ****                 ((uint8)(~PWM_CTRL_CMPMODE1_MASK));
 430              		.loc 1 117 0
 431 0002 1649     		ldr	r1, .L41
 432 0004 0B78     		ldrb	r3, [r1]
 433 0006 3F22     		movs	r2, #63
 434 0008 9343     		bics	r3, r2
 435              	.LVL13:
 119:Generated_Source\PSoC4/PWM.c ****                                    PWM_DEFAULT_COMPARE1_MODE;
 436              		.loc 1 119 0
 437 000a 2D22     		movs	r2, #45
 438 000c 1343     		orrs	r3, r2
 439              	.LVL14:
 440 000e DBB2     		uxtb	r3, r3
 441 0010 0B70     		strb	r3, [r1]
 129:Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP1 |= (PWM_AUX_CTRL_FIFO0_CLR);
 442              		.loc 1 129 0
 443 0012 1349     		ldr	r1, .L41+4
 444 0014 0A78     		ldrb	r2, [r1]
 445 0016 0123     		movs	r3, #1
 446 0018 1A43     		orrs	r2, r3
 447 001a D2B2     		uxtb	r2, r2
 448 001c 0A70     		strb	r2, [r1]
 130:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_Resolution == 8) */
 449              		.loc 1 130 0
 450 001e 114C     		ldr	r4, .L41+8
 451 0020 2278     		ldrb	r2, [r4]
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 23


 452 0022 1343     		orrs	r3, r2
 453 0024 DBB2     		uxtb	r3, r3
 454 0026 2370     		strb	r3, [r4]
 133:Generated_Source\PSoC4/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
 455              		.loc 1 133 0
 456 0028 C825     		movs	r5, #200
 457 002a 6D01     		lsls	r5, r5, #5
 458 002c 2800     		movs	r0, r5
 459 002e FFF7FEFF 		bl	PWM_WriteCounter
 460              	.LVL15:
 136:Generated_Source\PSoC4/PWM.c **** 
 461              		.loc 1 136 0
 462 0032 2800     		movs	r0, r5
 463 0034 FFF7FEFF 		bl	PWM_WritePeriod
 464              	.LVL16:
 139:Generated_Source\PSoC4/PWM.c ****         #else
 465              		.loc 1 139 0
 466 0038 0020     		movs	r0, #0
 467 003a FFF7FEFF 		bl	PWM_WriteCompare
 468              	.LVL17:
 154:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
 469              		.loc 1 154 0
 470 003e 0020     		movs	r0, #0
 471 0040 FFF7FEFF 		bl	PWM_SetInterruptMode
 472              	.LVL18:
 167:Generated_Source\PSoC4/PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 473              		.loc 1 167 0
 474 0044 FFF7FEFF 		bl	CyEnterCriticalSection
 475              	.LVL19:
 169:Generated_Source\PSoC4/PWM.c **** 
 476              		.loc 1 169 0
 477 0048 2278     		ldrb	r2, [r4]
 478 004a 1023     		movs	r3, #16
 479 004c 1343     		orrs	r3, r2
 480 004e DBB2     		uxtb	r3, r3
 481 0050 2370     		strb	r3, [r4]
 172:Generated_Source\PSoC4/PWM.c **** 
 482              		.loc 1 172 0
 483 0052 FFF7FEFF 		bl	CyExitCriticalSection
 484              	.LVL20:
 176:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseStatus) */
 485              		.loc 1 176 0
 486 0056 FFF7FEFF 		bl	PWM_ClearFIFO
 487              	.LVL21:
 179:Generated_Source\PSoC4/PWM.c **** 
 488              		.loc 1 179 0
 489              		@ sp needed
 490 005a 70BD     		pop	{r4, r5, r6, pc}
 491              	.L42:
 492              		.align	2
 493              	.L41:
 494 005c 72000F40 		.word	1074724978
 495 0060 92000F40 		.word	1074725010
 496 0064 93000F40 		.word	1074725011
 497              		.cfi_endproc
 498              	.LFE2:
 499              		.size	PWM_Init, .-PWM_Init
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 24


 500              		.section	.text.PWM_Start,"ax",%progbits
 501              		.align	2
 502              		.global	PWM_Start
 503              		.code	16
 504              		.thumb_func
 505              		.type	PWM_Start, %function
 506              	PWM_Start:
 507              	.LFB1:
  56:Generated_Source\PSoC4/PWM.c ****     /* If not Initialized then initialize all required hardware and software */
 508              		.loc 1 56 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512 0000 10B5     		push	{r4, lr}
 513              		.cfi_def_cfa_offset 8
 514              		.cfi_offset 4, -8
 515              		.cfi_offset 14, -4
  58:Generated_Source\PSoC4/PWM.c ****     {
 516              		.loc 1 58 0
 517 0002 064B     		ldr	r3, .L45
 518 0004 1B78     		ldrb	r3, [r3]
 519 0006 002B     		cmp	r3, #0
 520 0008 04D1     		bne	.L44
  60:Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 521              		.loc 1 60 0
 522 000a FFF7FEFF 		bl	PWM_Init
 523              	.LVL22:
  61:Generated_Source\PSoC4/PWM.c ****     }
 524              		.loc 1 61 0
 525 000e 0122     		movs	r2, #1
 526 0010 024B     		ldr	r3, .L45
 527 0012 1A70     		strb	r2, [r3]
 528              	.L44:
  63:Generated_Source\PSoC4/PWM.c **** 
 529              		.loc 1 63 0
 530 0014 FFF7FEFF 		bl	PWM_Enable
 531              	.LVL23:
  65:Generated_Source\PSoC4/PWM.c **** 
 532              		.loc 1 65 0
 533              		@ sp needed
 534 0018 10BD     		pop	{r4, pc}
 535              	.L46:
 536 001a C046     		.align	2
 537              	.L45:
 538 001c 00000000 		.word	.LANCHOR0
 539              		.cfi_endproc
 540              	.LFE1:
 541              		.size	PWM_Start, .-PWM_Start
 542              		.section	.text.PWM_ReadCompare,"ax",%progbits
 543              		.align	2
 544              		.global	PWM_ReadCompare
 545              		.code	16
 546              		.thumb_func
 547              		.type	PWM_ReadCompare, %function
 548              	PWM_ReadCompare:
 549              	.LFB16:
 794:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 25


 795:Generated_Source\PSoC4/PWM.c **** #endif /* (!PWM_UsingFixedFunction) */
 796:Generated_Source\PSoC4/PWM.c **** 
 797:Generated_Source\PSoC4/PWM.c **** 
 798:Generated_Source\PSoC4/PWM.c **** #if (PWM_UseOneCompareMode)
 799:Generated_Source\PSoC4/PWM.c **** 
 800:Generated_Source\PSoC4/PWM.c **** 
 801:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 802:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCompare
 803:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 804:Generated_Source\PSoC4/PWM.c ****     *
 805:Generated_Source\PSoC4/PWM.c ****     * Summary:
 806:Generated_Source\PSoC4/PWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC4/PWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC4/PWM.c ****     *
 809:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 810:Generated_Source\PSoC4/PWM.c ****     *  None
 811:Generated_Source\PSoC4/PWM.c ****     *
 812:Generated_Source\PSoC4/PWM.c ****     * Return:
 813:Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC4/PWM.c ****     *
 815:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 816:Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCompare(void) 
 817:Generated_Source\PSoC4/PWM.c ****     {
 550              		.loc 1 817 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554              		@ link register save eliminated.
 818:Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 819:Generated_Source\PSoC4/PWM.c ****             return ((uint16)CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC4/PWM.c ****         #else
 821:Generated_Source\PSoC4/PWM.c ****             return (CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 555              		.loc 1 821 0
 556 0000 014B     		ldr	r3, .L48
 557 0002 1888     		ldrh	r0, [r3]
 558 0004 80B2     		uxth	r0, r0
 822:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 823:Generated_Source\PSoC4/PWM.c ****     }
 559              		.loc 1 823 0
 560              		@ sp needed
 561 0006 7047     		bx	lr
 562              	.L49:
 563              		.align	2
 564              	.L48:
 565 0008 44100F40 		.word	1074729028
 566              		.cfi_endproc
 567              	.LFE16:
 568              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 569              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 570              		.align	2
 571              		.global	PWM_ReadPeriod
 572              		.code	16
 573              		.thumb_func
 574              		.type	PWM_ReadPeriod, %function
 575              	PWM_ReadPeriod:
 576              	.LFB17:
 824:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 26


 825:Generated_Source\PSoC4/PWM.c **** #else
 826:Generated_Source\PSoC4/PWM.c **** 
 827:Generated_Source\PSoC4/PWM.c **** 
 828:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 829:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCompare1
 830:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 831:Generated_Source\PSoC4/PWM.c ****     *
 832:Generated_Source\PSoC4/PWM.c ****     * Summary:
 833:Generated_Source\PSoC4/PWM.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC4/PWM.c ****     *
 835:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 836:Generated_Source\PSoC4/PWM.c ****     *  None
 837:Generated_Source\PSoC4/PWM.c ****     *
 838:Generated_Source\PSoC4/PWM.c ****     * Return:
 839:Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC4/PWM.c ****     *
 841:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 842:Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCompare1(void) 
 843:Generated_Source\PSoC4/PWM.c ****     {
 844:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC4/PWM.c ****     }
 846:Generated_Source\PSoC4/PWM.c **** 
 847:Generated_Source\PSoC4/PWM.c **** 
 848:Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 849:Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCompare2
 850:Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 851:Generated_Source\PSoC4/PWM.c ****     *
 852:Generated_Source\PSoC4/PWM.c ****     * Summary:
 853:Generated_Source\PSoC4/PWM.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC4/PWM.c ****     *
 855:Generated_Source\PSoC4/PWM.c ****     * Parameters:
 856:Generated_Source\PSoC4/PWM.c ****     *  None
 857:Generated_Source\PSoC4/PWM.c ****     *
 858:Generated_Source\PSoC4/PWM.c ****     * Return:
 859:Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC4/PWM.c ****     *
 861:Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 862:Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCompare2(void) 
 863:Generated_Source\PSoC4/PWM.c ****     {
 864:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC4/PWM.c ****     }
 866:Generated_Source\PSoC4/PWM.c **** 
 867:Generated_Source\PSoC4/PWM.c **** #endif /* (PWM_UseOneCompareMode) */
 868:Generated_Source\PSoC4/PWM.c **** 
 869:Generated_Source\PSoC4/PWM.c **** 
 870:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 871:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 872:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 873:Generated_Source\PSoC4/PWM.c **** *
 874:Generated_Source\PSoC4/PWM.c **** * Summary:
 875:Generated_Source\PSoC4/PWM.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC4/PWM.c **** *
 877:Generated_Source\PSoC4/PWM.c **** * Parameters:
 878:Generated_Source\PSoC4/PWM.c **** *  None
 879:Generated_Source\PSoC4/PWM.c **** *
 880:Generated_Source\PSoC4/PWM.c **** * Return:
 881:Generated_Source\PSoC4/PWM.c **** *  uint8/16: Period value
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 27


 882:Generated_Source\PSoC4/PWM.c **** *
 883:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 884:Generated_Source\PSoC4/PWM.c **** uint16 PWM_ReadPeriod(void) 
 885:Generated_Source\PSoC4/PWM.c **** {
 577              		.loc 1 885 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 886:Generated_Source\PSoC4/PWM.c ****     #if(PWM_UsingFixedFunction)
 887:Generated_Source\PSoC4/PWM.c ****         return ((uint16)CY_GET_REG16(PWM_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC4/PWM.c ****     #else
 889:Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_PERIOD_LSB_PTR));
 582              		.loc 1 889 0
 583 0000 014B     		ldr	r3, .L51
 584 0002 1888     		ldrh	r0, [r3]
 585 0004 80B2     		uxth	r0, r0
 890:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 891:Generated_Source\PSoC4/PWM.c **** }
 586              		.loc 1 891 0
 587              		@ sp needed
 588 0006 7047     		bx	lr
 589              	.L52:
 590              		.align	2
 591              	.L51:
 592 0008 84100F40 		.word	1074729092
 593              		.cfi_endproc
 594              	.LFE17:
 595              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 596              		.global	PWM_initVar
 597              		.bss
 598              		.set	.LANCHOR0,. + 0
 599              		.type	PWM_initVar, %object
 600              		.size	PWM_initVar, 1
 601              	PWM_initVar:
 602 0000 00       		.space	1
 603              		.text
 604              	.Letext0:
 605              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 606              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 607              		.section	.debug_info,"",%progbits
 608              	.Ldebug_info0:
 609 0000 91030000 		.4byte	0x391
 610 0004 0400     		.2byte	0x4
 611 0006 00000000 		.4byte	.Ldebug_abbrev0
 612 000a 04       		.byte	0x4
 613 000b 01       		.uleb128 0x1
 614 000c DA010000 		.4byte	.LASF47
 615 0010 0C       		.byte	0xc
 616 0011 38030000 		.4byte	.LASF48
 617 0015 CE000000 		.4byte	.LASF49
 618 0019 00000000 		.4byte	.Ldebug_ranges0+0
 619 001d 00000000 		.4byte	0
 620 0021 00000000 		.4byte	.Ldebug_line0
 621 0025 02       		.uleb128 0x2
 622 0026 01       		.byte	0x1
 623 0027 06       		.byte	0x6
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 28


 624 0028 79030000 		.4byte	.LASF0
 625 002c 02       		.uleb128 0x2
 626 002d 01       		.byte	0x1
 627 002e 08       		.byte	0x8
 628 002f 8B000000 		.4byte	.LASF1
 629 0033 02       		.uleb128 0x2
 630 0034 02       		.byte	0x2
 631 0035 05       		.byte	0x5
 632 0036 ED020000 		.4byte	.LASF2
 633 003a 02       		.uleb128 0x2
 634 003b 02       		.byte	0x2
 635 003c 07       		.byte	0x7
 636 003d 47000000 		.4byte	.LASF3
 637 0041 02       		.uleb128 0x2
 638 0042 04       		.byte	0x4
 639 0043 05       		.byte	0x5
 640 0044 2A030000 		.4byte	.LASF4
 641 0048 02       		.uleb128 0x2
 642 0049 04       		.byte	0x4
 643 004a 07       		.byte	0x7
 644 004b 9E000000 		.4byte	.LASF5
 645 004f 02       		.uleb128 0x2
 646 0050 08       		.byte	0x8
 647 0051 05       		.byte	0x5
 648 0052 96020000 		.4byte	.LASF6
 649 0056 02       		.uleb128 0x2
 650 0057 08       		.byte	0x8
 651 0058 07       		.byte	0x7
 652 0059 BC010000 		.4byte	.LASF7
 653 005d 03       		.uleb128 0x3
 654 005e 04       		.byte	0x4
 655 005f 05       		.byte	0x5
 656 0060 696E7400 		.ascii	"int\000"
 657 0064 02       		.uleb128 0x2
 658 0065 04       		.byte	0x4
 659 0066 07       		.byte	0x7
 660 0067 9C010000 		.4byte	.LASF8
 661 006b 04       		.uleb128 0x4
 662 006c C0000000 		.4byte	.LASF9
 663 0070 02       		.byte	0x2
 664 0071 FB01     		.2byte	0x1fb
 665 0073 2C000000 		.4byte	0x2c
 666 0077 04       		.uleb128 0x4
 667 0078 72010000 		.4byte	.LASF10
 668 007c 02       		.byte	0x2
 669 007d FC01     		.2byte	0x1fc
 670 007f 3A000000 		.4byte	0x3a
 671 0083 02       		.uleb128 0x2
 672 0084 04       		.byte	0x4
 673 0085 04       		.byte	0x4
 674 0086 7D000000 		.4byte	.LASF11
 675 008a 02       		.uleb128 0x2
 676 008b 08       		.byte	0x8
 677 008c 04       		.byte	0x4
 678 008d 47010000 		.4byte	.LASF12
 679 0091 02       		.uleb128 0x2
 680 0092 01       		.byte	0x1
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 29


 681 0093 08       		.byte	0x8
 682 0094 33030000 		.4byte	.LASF13
 683 0098 04       		.uleb128 0x4
 684 0099 99000000 		.4byte	.LASF14
 685 009d 02       		.byte	0x2
 686 009e A502     		.2byte	0x2a5
 687 00a0 A4000000 		.4byte	0xa4
 688 00a4 05       		.uleb128 0x5
 689 00a5 6B000000 		.4byte	0x6b
 690 00a9 04       		.uleb128 0x4
 691 00aa 00000000 		.4byte	.LASF15
 692 00ae 02       		.byte	0x2
 693 00af A602     		.2byte	0x2a6
 694 00b1 B5000000 		.4byte	0xb5
 695 00b5 05       		.uleb128 0x5
 696 00b6 77000000 		.4byte	0x77
 697 00ba 02       		.uleb128 0x2
 698 00bb 08       		.byte	0x8
 699 00bc 04       		.byte	0x4
 700 00bd 55030000 		.4byte	.LASF16
 701 00c1 02       		.uleb128 0x2
 702 00c2 04       		.byte	0x4
 703 00c3 07       		.byte	0x7
 704 00c4 8D020000 		.4byte	.LASF17
 705 00c8 06       		.uleb128 0x6
 706 00c9 8D030000 		.4byte	.LASF18
 707 00cd 01       		.byte	0x1
 708 00ce C7       		.byte	0xc7
 709 00cf 00000000 		.4byte	.LFB3
 710 00d3 14000000 		.4byte	.LFE3-.LFB3
 711 00d7 01       		.uleb128 0x1
 712 00d8 9C       		.byte	0x9c
 713 00d9 06       		.uleb128 0x6
 714 00da 2D000000 		.4byte	.LASF19
 715 00de 01       		.byte	0x1
 716 00df E9       		.byte	0xe9
 717 00e0 00000000 		.4byte	.LFB4
 718 00e4 10000000 		.4byte	.LFE4-.LFB4
 719 00e8 01       		.uleb128 0x1
 720 00e9 9C       		.byte	0x9c
 721 00ea 07       		.uleb128 0x7
 722 00eb 6A000000 		.4byte	.LASF22
 723 00ef 01       		.byte	0x1
 724 00f0 0A01     		.2byte	0x10a
 725 00f2 00000000 		.4byte	.LFB5
 726 00f6 28000000 		.4byte	.LFE5-.LFB5
 727 00fa 01       		.uleb128 0x1
 728 00fb 9C       		.byte	0x9c
 729 00fc 2F010000 		.4byte	0x12f
 730 0100 08       		.uleb128 0x8
 731 0101 1E030000 		.4byte	.LASF24
 732 0105 01       		.byte	0x1
 733 0106 0A01     		.2byte	0x10a
 734 0108 6B000000 		.4byte	0x6b
 735 010c 00000000 		.4byte	.LLST0
 736 0110 09       		.uleb128 0x9
 737 0111 5F010000 		.4byte	.LASF20
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 30


 738 0115 01       		.byte	0x1
 739 0116 1D01     		.2byte	0x11d
 740 0118 6B000000 		.4byte	0x6b
 741 011c 21000000 		.4byte	.LLST1
 742 0120 0A       		.uleb128 0xa
 743 0121 A9010000 		.4byte	.LASF21
 744 0125 01       		.byte	0x1
 745 0126 2101     		.2byte	0x121
 746 0128 6B000000 		.4byte	0x6b
 747 012c 01       		.uleb128 0x1
 748 012d 53       		.byte	0x53
 749 012e 00       		.byte	0
 750 012f 07       		.uleb128 0x7
 751 0130 F7020000 		.4byte	.LASF23
 752 0134 01       		.byte	0x1
 753 0135 9301     		.2byte	0x193
 754 0137 00000000 		.4byte	.LFB6
 755 013b 0C000000 		.4byte	.LFE6-.LFB6
 756 013f 01       		.uleb128 0x1
 757 0140 9C       		.byte	0x9c
 758 0141 54010000 		.4byte	0x154
 759 0145 0B       		.uleb128 0xb
 760 0146 83000000 		.4byte	.LASF25
 761 014a 01       		.byte	0x1
 762 014b 9301     		.2byte	0x193
 763 014d 77000000 		.4byte	0x77
 764 0151 01       		.uleb128 0x1
 765 0152 50       		.byte	0x50
 766 0153 00       		.byte	0
 767 0154 0C       		.uleb128 0xc
 768 0155 B0000000 		.4byte	.LASF32
 769 0159 01       		.byte	0x1
 770 015a A901     		.2byte	0x1a9
 771 015c 77000000 		.4byte	0x77
 772 0160 00000000 		.4byte	.LFB7
 773 0164 14000000 		.4byte	.LFE7-.LFB7
 774 0168 01       		.uleb128 0x1
 775 0169 9C       		.byte	0x9c
 776 016a 07       		.uleb128 0x7
 777 016b 68020000 		.4byte	.LASF26
 778 016f 01       		.byte	0x1
 779 0170 E201     		.2byte	0x1e2
 780 0172 00000000 		.4byte	.LFB9
 781 0176 0C000000 		.4byte	.LFE9-.LFB9
 782 017a 01       		.uleb128 0x1
 783 017b 9C       		.byte	0x9c
 784 017c 8F010000 		.4byte	0x18f
 785 0180 0B       		.uleb128 0xb
 786 0181 36000000 		.4byte	.LASF27
 787 0185 01       		.byte	0x1
 788 0186 E201     		.2byte	0x1e2
 789 0188 77000000 		.4byte	0x77
 790 018c 01       		.uleb128 0x1
 791 018d 50       		.byte	0x50
 792 018e 00       		.byte	0
 793 018f 07       		.uleb128 0x7
 794 0190 4E010000 		.4byte	.LASF28
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 31


 795 0194 01       		.byte	0x1
 796 0195 0402     		.2byte	0x204
 797 0197 00000000 		.4byte	.LFB10
 798 019b 0C000000 		.4byte	.LFE10-.LFB10
 799 019f 01       		.uleb128 0x1
 800 01a0 9C       		.byte	0x9c
 801 01a1 B4010000 		.4byte	0x1b4
 802 01a5 0B       		.uleb128 0xb
 803 01a6 85030000 		.4byte	.LASF29
 804 01aa 01       		.byte	0x1
 805 01ab 0402     		.2byte	0x204
 806 01ad 77000000 		.4byte	0x77
 807 01b1 01       		.uleb128 0x1
 808 01b2 50       		.byte	0x50
 809 01b3 00       		.byte	0
 810 01b4 07       		.uleb128 0x7
 811 01b5 78020000 		.4byte	.LASF30
 812 01b9 01       		.byte	0x1
 813 01ba AC02     		.2byte	0x2ac
 814 01bc 00000000 		.4byte	.LFB11
 815 01c0 0C000000 		.4byte	.LFE11-.LFB11
 816 01c4 01       		.uleb128 0x1
 817 01c5 9C       		.byte	0x9c
 818 01c6 D9010000 		.4byte	0x1d9
 819 01ca 0B       		.uleb128 0xb
 820 01cb A4020000 		.4byte	.LASF31
 821 01cf 01       		.byte	0x1
 822 01d0 AC02     		.2byte	0x2ac
 823 01d2 6B000000 		.4byte	0x6b
 824 01d6 01       		.uleb128 0x1
 825 01d7 50       		.byte	0x50
 826 01d8 00       		.byte	0
 827 01d9 0C       		.uleb128 0xc
 828 01da 98030000 		.4byte	.LASF33
 829 01de 01       		.byte	0x1
 830 01df C702     		.2byte	0x2c7
 831 01e1 6B000000 		.4byte	0x6b
 832 01e5 00000000 		.4byte	.LFB12
 833 01e9 0C000000 		.4byte	.LFE12-.LFB12
 834 01ed 01       		.uleb128 0x1
 835 01ee 9C       		.byte	0x9c
 836 01ef 0D       		.uleb128 0xd
 837 01f0 61030000 		.4byte	.LASF50
 838 01f4 01       		.byte	0x1
 839 01f5 E102     		.2byte	0x2e1
 840 01f7 6B000000 		.4byte	0x6b
 841 01fb 00000000 		.4byte	.LFB13
 842 01ff 0C000000 		.4byte	.LFE13-.LFB13
 843 0203 01       		.uleb128 0x1
 844 0204 9C       		.byte	0x9c
 845 0205 18020000 		.4byte	0x218
 846 0209 0A       		.uleb128 0xa
 847 020a D3010000 		.4byte	.LASF34
 848 020e 01       		.byte	0x1
 849 020f E302     		.2byte	0x2e3
 850 0211 6B000000 		.4byte	0x6b
 851 0215 01       		.uleb128 0x1
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 32


 852 0216 50       		.byte	0x50
 853 0217 00       		.byte	0
 854 0218 07       		.uleb128 0x7
 855 0219 B2020000 		.4byte	.LASF35
 856 021d 01       		.byte	0x1
 857 021e FD02     		.2byte	0x2fd
 858 0220 00000000 		.4byte	.LFB14
 859 0224 0C000000 		.4byte	.LFE14-.LFB14
 860 0228 01       		.uleb128 0x1
 861 0229 9C       		.byte	0x9c
 862 022a 3D020000 		.4byte	0x23d
 863 022e 0B       		.uleb128 0xb
 864 022f C6000000 		.4byte	.LASF36
 865 0233 01       		.byte	0x1
 866 0234 FD02     		.2byte	0x2fd
 867 0236 6B000000 		.4byte	0x6b
 868 023a 01       		.uleb128 0x1
 869 023b 50       		.byte	0x50
 870 023c 00       		.byte	0
 871 023d 0C       		.uleb128 0xc
 872 023e 5A000000 		.4byte	.LASF37
 873 0242 01       		.byte	0x1
 874 0243 1603     		.2byte	0x316
 875 0245 77000000 		.4byte	0x77
 876 0249 00000000 		.4byte	.LFB15
 877 024d 0C000000 		.4byte	.LFE15-.LFB15
 878 0251 01       		.uleb128 0x1
 879 0252 9C       		.byte	0x9c
 880 0253 07       		.uleb128 0x7
 881 0254 1F000000 		.4byte	.LASF38
 882 0258 01       		.byte	0x1
 883 0259 C501     		.2byte	0x1c5
 884 025b 00000000 		.4byte	.LFB8
 885 025f 12000000 		.4byte	.LFE8-.LFB8
 886 0263 01       		.uleb128 0x1
 887 0264 9C       		.byte	0x9c
 888 0265 7C020000 		.4byte	0x27c
 889 0269 0E       		.uleb128 0xe
 890 026a 08000000 		.4byte	.LVL11
 891 026e 3D020000 		.4byte	0x23d
 892 0272 0E       		.uleb128 0xe
 893 0273 0C000000 		.4byte	.LVL12
 894 0277 D9010000 		.4byte	0x1d9
 895 027b 00       		.byte	0
 896 027c 0F       		.uleb128 0xf
 897 027d 16000000 		.4byte	.LASF39
 898 0281 01       		.byte	0x1
 899 0282 54       		.byte	0x54
 900 0283 00000000 		.4byte	.LFB2
 901 0287 68000000 		.4byte	.LFE2-.LFB2
 902 028b 01       		.uleb128 0x1
 903 028c 9C       		.byte	0x9c
 904 028d 19030000 		.4byte	0x319
 905 0291 10       		.uleb128 0x10
 906 0292 AF030000 		.4byte	.LASF40
 907 0296 01       		.byte	0x1
 908 0297 57       		.byte	0x57
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 33


 909 0298 6B000000 		.4byte	0x6b
 910 029c 34000000 		.4byte	.LLST2
 911 02a0 10       		.uleb128 0x10
 912 02a1 CB020000 		.4byte	.LASF41
 913 02a5 01       		.byte	0x1
 914 02a6 5D       		.byte	0x5d
 915 02a7 6B000000 		.4byte	0x6b
 916 02ab 47000000 		.4byte	.LLST3
 917 02af 11       		.uleb128 0x11
 918 02b0 32000000 		.4byte	.LVL15
 919 02b4 2F010000 		.4byte	0x12f
 920 02b8 C3020000 		.4byte	0x2c3
 921 02bc 12       		.uleb128 0x12
 922 02bd 01       		.uleb128 0x1
 923 02be 50       		.byte	0x50
 924 02bf 02       		.uleb128 0x2
 925 02c0 75       		.byte	0x75
 926 02c1 00       		.sleb128 0
 927 02c2 00       		.byte	0
 928 02c3 11       		.uleb128 0x11
 929 02c4 38000000 		.4byte	.LVL16
 930 02c8 6A010000 		.4byte	0x16a
 931 02cc D7020000 		.4byte	0x2d7
 932 02d0 12       		.uleb128 0x12
 933 02d1 01       		.uleb128 0x1
 934 02d2 50       		.byte	0x50
 935 02d3 02       		.uleb128 0x2
 936 02d4 75       		.byte	0x75
 937 02d5 00       		.sleb128 0
 938 02d6 00       		.byte	0
 939 02d7 11       		.uleb128 0x11
 940 02d8 3E000000 		.4byte	.LVL17
 941 02dc 8F010000 		.4byte	0x18f
 942 02e0 EA020000 		.4byte	0x2ea
 943 02e4 12       		.uleb128 0x12
 944 02e5 01       		.uleb128 0x1
 945 02e6 50       		.byte	0x50
 946 02e7 01       		.uleb128 0x1
 947 02e8 30       		.byte	0x30
 948 02e9 00       		.byte	0
 949 02ea 11       		.uleb128 0x11
 950 02eb 44000000 		.4byte	.LVL18
 951 02ef B4010000 		.4byte	0x1b4
 952 02f3 FD020000 		.4byte	0x2fd
 953 02f7 12       		.uleb128 0x12
 954 02f8 01       		.uleb128 0x1
 955 02f9 50       		.byte	0x50
 956 02fa 01       		.uleb128 0x1
 957 02fb 30       		.byte	0x30
 958 02fc 00       		.byte	0
 959 02fd 0E       		.uleb128 0xe
 960 02fe 48000000 		.4byte	.LVL19
 961 0302 7E030000 		.4byte	0x37e
 962 0306 0E       		.uleb128 0xe
 963 0307 56000000 		.4byte	.LVL20
 964 030b 89030000 		.4byte	0x389
 965 030f 0E       		.uleb128 0xe
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 34


 966 0310 5A000000 		.4byte	.LVL21
 967 0314 53020000 		.4byte	0x253
 968 0318 00       		.byte	0
 969 0319 0F       		.uleb128 0xf
 970 031a 3D000000 		.4byte	.LASF42
 971 031e 01       		.byte	0x1
 972 031f 37       		.byte	0x37
 973 0320 00000000 		.4byte	.LFB1
 974 0324 20000000 		.4byte	.LFE1-.LFB1
 975 0328 01       		.uleb128 0x1
 976 0329 9C       		.byte	0x9c
 977 032a 41030000 		.4byte	0x341
 978 032e 0E       		.uleb128 0xe
 979 032f 0E000000 		.4byte	.LVL22
 980 0333 7C020000 		.4byte	0x27c
 981 0337 0E       		.uleb128 0xe
 982 0338 18000000 		.4byte	.LVL23
 983 033c C8000000 		.4byte	0xc8
 984 0340 00       		.byte	0
 985 0341 0C       		.uleb128 0xc
 986 0342 06000000 		.4byte	.LASF43
 987 0346 01       		.byte	0x1
 988 0347 3003     		.2byte	0x330
 989 0349 77000000 		.4byte	0x77
 990 034d 00000000 		.4byte	.LFB16
 991 0351 0C000000 		.4byte	.LFE16-.LFB16
 992 0355 01       		.uleb128 0x1
 993 0356 9C       		.byte	0x9c
 994 0357 0C       		.uleb128 0xc
 995 0358 DE020000 		.4byte	.LASF44
 996 035c 01       		.byte	0x1
 997 035d 7403     		.2byte	0x374
 998 035f 77000000 		.4byte	0x77
 999 0363 00000000 		.4byte	.LFB17
 1000 0367 0C000000 		.4byte	.LFE17-.LFB17
 1001 036b 01       		.uleb128 0x1
 1002 036c 9C       		.byte	0x9c
 1003 036d 13       		.uleb128 0x13
 1004 036e 79010000 		.4byte	.LASF51
 1005 0372 01       		.byte	0x1
 1006 0373 20       		.byte	0x20
 1007 0374 6B000000 		.4byte	0x6b
 1008 0378 05       		.uleb128 0x5
 1009 0379 03       		.byte	0x3
 1010 037a 00000000 		.4byte	PWM_initVar
 1011 037e 14       		.uleb128 0x14
 1012 037f 85010000 		.4byte	.LASF45
 1013 0383 85010000 		.4byte	.LASF45
 1014 0387 03       		.byte	0x3
 1015 0388 F8       		.byte	0xf8
 1016 0389 14       		.uleb128 0x14
 1017 038a 08030000 		.4byte	.LASF46
 1018 038e 08030000 		.4byte	.LASF46
 1019 0392 03       		.byte	0x3
 1020 0393 F9       		.byte	0xf9
 1021 0394 00       		.byte	0
 1022              		.section	.debug_abbrev,"",%progbits
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 35


 1023              	.Ldebug_abbrev0:
 1024 0000 01       		.uleb128 0x1
 1025 0001 11       		.uleb128 0x11
 1026 0002 01       		.byte	0x1
 1027 0003 25       		.uleb128 0x25
 1028 0004 0E       		.uleb128 0xe
 1029 0005 13       		.uleb128 0x13
 1030 0006 0B       		.uleb128 0xb
 1031 0007 03       		.uleb128 0x3
 1032 0008 0E       		.uleb128 0xe
 1033 0009 1B       		.uleb128 0x1b
 1034 000a 0E       		.uleb128 0xe
 1035 000b 55       		.uleb128 0x55
 1036 000c 17       		.uleb128 0x17
 1037 000d 11       		.uleb128 0x11
 1038 000e 01       		.uleb128 0x1
 1039 000f 10       		.uleb128 0x10
 1040 0010 17       		.uleb128 0x17
 1041 0011 00       		.byte	0
 1042 0012 00       		.byte	0
 1043 0013 02       		.uleb128 0x2
 1044 0014 24       		.uleb128 0x24
 1045 0015 00       		.byte	0
 1046 0016 0B       		.uleb128 0xb
 1047 0017 0B       		.uleb128 0xb
 1048 0018 3E       		.uleb128 0x3e
 1049 0019 0B       		.uleb128 0xb
 1050 001a 03       		.uleb128 0x3
 1051 001b 0E       		.uleb128 0xe
 1052 001c 00       		.byte	0
 1053 001d 00       		.byte	0
 1054 001e 03       		.uleb128 0x3
 1055 001f 24       		.uleb128 0x24
 1056 0020 00       		.byte	0
 1057 0021 0B       		.uleb128 0xb
 1058 0022 0B       		.uleb128 0xb
 1059 0023 3E       		.uleb128 0x3e
 1060 0024 0B       		.uleb128 0xb
 1061 0025 03       		.uleb128 0x3
 1062 0026 08       		.uleb128 0x8
 1063 0027 00       		.byte	0
 1064 0028 00       		.byte	0
 1065 0029 04       		.uleb128 0x4
 1066 002a 16       		.uleb128 0x16
 1067 002b 00       		.byte	0
 1068 002c 03       		.uleb128 0x3
 1069 002d 0E       		.uleb128 0xe
 1070 002e 3A       		.uleb128 0x3a
 1071 002f 0B       		.uleb128 0xb
 1072 0030 3B       		.uleb128 0x3b
 1073 0031 05       		.uleb128 0x5
 1074 0032 49       		.uleb128 0x49
 1075 0033 13       		.uleb128 0x13
 1076 0034 00       		.byte	0
 1077 0035 00       		.byte	0
 1078 0036 05       		.uleb128 0x5
 1079 0037 35       		.uleb128 0x35
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 36


 1080 0038 00       		.byte	0
 1081 0039 49       		.uleb128 0x49
 1082 003a 13       		.uleb128 0x13
 1083 003b 00       		.byte	0
 1084 003c 00       		.byte	0
 1085 003d 06       		.uleb128 0x6
 1086 003e 2E       		.uleb128 0x2e
 1087 003f 00       		.byte	0
 1088 0040 3F       		.uleb128 0x3f
 1089 0041 19       		.uleb128 0x19
 1090 0042 03       		.uleb128 0x3
 1091 0043 0E       		.uleb128 0xe
 1092 0044 3A       		.uleb128 0x3a
 1093 0045 0B       		.uleb128 0xb
 1094 0046 3B       		.uleb128 0x3b
 1095 0047 0B       		.uleb128 0xb
 1096 0048 27       		.uleb128 0x27
 1097 0049 19       		.uleb128 0x19
 1098 004a 11       		.uleb128 0x11
 1099 004b 01       		.uleb128 0x1
 1100 004c 12       		.uleb128 0x12
 1101 004d 06       		.uleb128 0x6
 1102 004e 40       		.uleb128 0x40
 1103 004f 18       		.uleb128 0x18
 1104 0050 9742     		.uleb128 0x2117
 1105 0052 19       		.uleb128 0x19
 1106 0053 00       		.byte	0
 1107 0054 00       		.byte	0
 1108 0055 07       		.uleb128 0x7
 1109 0056 2E       		.uleb128 0x2e
 1110 0057 01       		.byte	0x1
 1111 0058 3F       		.uleb128 0x3f
 1112 0059 19       		.uleb128 0x19
 1113 005a 03       		.uleb128 0x3
 1114 005b 0E       		.uleb128 0xe
 1115 005c 3A       		.uleb128 0x3a
 1116 005d 0B       		.uleb128 0xb
 1117 005e 3B       		.uleb128 0x3b
 1118 005f 05       		.uleb128 0x5
 1119 0060 27       		.uleb128 0x27
 1120 0061 19       		.uleb128 0x19
 1121 0062 11       		.uleb128 0x11
 1122 0063 01       		.uleb128 0x1
 1123 0064 12       		.uleb128 0x12
 1124 0065 06       		.uleb128 0x6
 1125 0066 40       		.uleb128 0x40
 1126 0067 18       		.uleb128 0x18
 1127 0068 9742     		.uleb128 0x2117
 1128 006a 19       		.uleb128 0x19
 1129 006b 01       		.uleb128 0x1
 1130 006c 13       		.uleb128 0x13
 1131 006d 00       		.byte	0
 1132 006e 00       		.byte	0
 1133 006f 08       		.uleb128 0x8
 1134 0070 05       		.uleb128 0x5
 1135 0071 00       		.byte	0
 1136 0072 03       		.uleb128 0x3
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 37


 1137 0073 0E       		.uleb128 0xe
 1138 0074 3A       		.uleb128 0x3a
 1139 0075 0B       		.uleb128 0xb
 1140 0076 3B       		.uleb128 0x3b
 1141 0077 05       		.uleb128 0x5
 1142 0078 49       		.uleb128 0x49
 1143 0079 13       		.uleb128 0x13
 1144 007a 02       		.uleb128 0x2
 1145 007b 17       		.uleb128 0x17
 1146 007c 00       		.byte	0
 1147 007d 00       		.byte	0
 1148 007e 09       		.uleb128 0x9
 1149 007f 34       		.uleb128 0x34
 1150 0080 00       		.byte	0
 1151 0081 03       		.uleb128 0x3
 1152 0082 0E       		.uleb128 0xe
 1153 0083 3A       		.uleb128 0x3a
 1154 0084 0B       		.uleb128 0xb
 1155 0085 3B       		.uleb128 0x3b
 1156 0086 05       		.uleb128 0x5
 1157 0087 49       		.uleb128 0x49
 1158 0088 13       		.uleb128 0x13
 1159 0089 02       		.uleb128 0x2
 1160 008a 17       		.uleb128 0x17
 1161 008b 00       		.byte	0
 1162 008c 00       		.byte	0
 1163 008d 0A       		.uleb128 0xa
 1164 008e 34       		.uleb128 0x34
 1165 008f 00       		.byte	0
 1166 0090 03       		.uleb128 0x3
 1167 0091 0E       		.uleb128 0xe
 1168 0092 3A       		.uleb128 0x3a
 1169 0093 0B       		.uleb128 0xb
 1170 0094 3B       		.uleb128 0x3b
 1171 0095 05       		.uleb128 0x5
 1172 0096 49       		.uleb128 0x49
 1173 0097 13       		.uleb128 0x13
 1174 0098 02       		.uleb128 0x2
 1175 0099 18       		.uleb128 0x18
 1176 009a 00       		.byte	0
 1177 009b 00       		.byte	0
 1178 009c 0B       		.uleb128 0xb
 1179 009d 05       		.uleb128 0x5
 1180 009e 00       		.byte	0
 1181 009f 03       		.uleb128 0x3
 1182 00a0 0E       		.uleb128 0xe
 1183 00a1 3A       		.uleb128 0x3a
 1184 00a2 0B       		.uleb128 0xb
 1185 00a3 3B       		.uleb128 0x3b
 1186 00a4 05       		.uleb128 0x5
 1187 00a5 49       		.uleb128 0x49
 1188 00a6 13       		.uleb128 0x13
 1189 00a7 02       		.uleb128 0x2
 1190 00a8 18       		.uleb128 0x18
 1191 00a9 00       		.byte	0
 1192 00aa 00       		.byte	0
 1193 00ab 0C       		.uleb128 0xc
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 38


 1194 00ac 2E       		.uleb128 0x2e
 1195 00ad 00       		.byte	0
 1196 00ae 3F       		.uleb128 0x3f
 1197 00af 19       		.uleb128 0x19
 1198 00b0 03       		.uleb128 0x3
 1199 00b1 0E       		.uleb128 0xe
 1200 00b2 3A       		.uleb128 0x3a
 1201 00b3 0B       		.uleb128 0xb
 1202 00b4 3B       		.uleb128 0x3b
 1203 00b5 05       		.uleb128 0x5
 1204 00b6 27       		.uleb128 0x27
 1205 00b7 19       		.uleb128 0x19
 1206 00b8 49       		.uleb128 0x49
 1207 00b9 13       		.uleb128 0x13
 1208 00ba 11       		.uleb128 0x11
 1209 00bb 01       		.uleb128 0x1
 1210 00bc 12       		.uleb128 0x12
 1211 00bd 06       		.uleb128 0x6
 1212 00be 40       		.uleb128 0x40
 1213 00bf 18       		.uleb128 0x18
 1214 00c0 9742     		.uleb128 0x2117
 1215 00c2 19       		.uleb128 0x19
 1216 00c3 00       		.byte	0
 1217 00c4 00       		.byte	0
 1218 00c5 0D       		.uleb128 0xd
 1219 00c6 2E       		.uleb128 0x2e
 1220 00c7 01       		.byte	0x1
 1221 00c8 3F       		.uleb128 0x3f
 1222 00c9 19       		.uleb128 0x19
 1223 00ca 03       		.uleb128 0x3
 1224 00cb 0E       		.uleb128 0xe
 1225 00cc 3A       		.uleb128 0x3a
 1226 00cd 0B       		.uleb128 0xb
 1227 00ce 3B       		.uleb128 0x3b
 1228 00cf 05       		.uleb128 0x5
 1229 00d0 27       		.uleb128 0x27
 1230 00d1 19       		.uleb128 0x19
 1231 00d2 49       		.uleb128 0x49
 1232 00d3 13       		.uleb128 0x13
 1233 00d4 11       		.uleb128 0x11
 1234 00d5 01       		.uleb128 0x1
 1235 00d6 12       		.uleb128 0x12
 1236 00d7 06       		.uleb128 0x6
 1237 00d8 40       		.uleb128 0x40
 1238 00d9 18       		.uleb128 0x18
 1239 00da 9742     		.uleb128 0x2117
 1240 00dc 19       		.uleb128 0x19
 1241 00dd 01       		.uleb128 0x1
 1242 00de 13       		.uleb128 0x13
 1243 00df 00       		.byte	0
 1244 00e0 00       		.byte	0
 1245 00e1 0E       		.uleb128 0xe
 1246 00e2 898201   		.uleb128 0x4109
 1247 00e5 00       		.byte	0
 1248 00e6 11       		.uleb128 0x11
 1249 00e7 01       		.uleb128 0x1
 1250 00e8 31       		.uleb128 0x31
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 39


 1251 00e9 13       		.uleb128 0x13
 1252 00ea 00       		.byte	0
 1253 00eb 00       		.byte	0
 1254 00ec 0F       		.uleb128 0xf
 1255 00ed 2E       		.uleb128 0x2e
 1256 00ee 01       		.byte	0x1
 1257 00ef 3F       		.uleb128 0x3f
 1258 00f0 19       		.uleb128 0x19
 1259 00f1 03       		.uleb128 0x3
 1260 00f2 0E       		.uleb128 0xe
 1261 00f3 3A       		.uleb128 0x3a
 1262 00f4 0B       		.uleb128 0xb
 1263 00f5 3B       		.uleb128 0x3b
 1264 00f6 0B       		.uleb128 0xb
 1265 00f7 27       		.uleb128 0x27
 1266 00f8 19       		.uleb128 0x19
 1267 00f9 11       		.uleb128 0x11
 1268 00fa 01       		.uleb128 0x1
 1269 00fb 12       		.uleb128 0x12
 1270 00fc 06       		.uleb128 0x6
 1271 00fd 40       		.uleb128 0x40
 1272 00fe 18       		.uleb128 0x18
 1273 00ff 9742     		.uleb128 0x2117
 1274 0101 19       		.uleb128 0x19
 1275 0102 01       		.uleb128 0x1
 1276 0103 13       		.uleb128 0x13
 1277 0104 00       		.byte	0
 1278 0105 00       		.byte	0
 1279 0106 10       		.uleb128 0x10
 1280 0107 34       		.uleb128 0x34
 1281 0108 00       		.byte	0
 1282 0109 03       		.uleb128 0x3
 1283 010a 0E       		.uleb128 0xe
 1284 010b 3A       		.uleb128 0x3a
 1285 010c 0B       		.uleb128 0xb
 1286 010d 3B       		.uleb128 0x3b
 1287 010e 0B       		.uleb128 0xb
 1288 010f 49       		.uleb128 0x49
 1289 0110 13       		.uleb128 0x13
 1290 0111 02       		.uleb128 0x2
 1291 0112 17       		.uleb128 0x17
 1292 0113 00       		.byte	0
 1293 0114 00       		.byte	0
 1294 0115 11       		.uleb128 0x11
 1295 0116 898201   		.uleb128 0x4109
 1296 0119 01       		.byte	0x1
 1297 011a 11       		.uleb128 0x11
 1298 011b 01       		.uleb128 0x1
 1299 011c 31       		.uleb128 0x31
 1300 011d 13       		.uleb128 0x13
 1301 011e 01       		.uleb128 0x1
 1302 011f 13       		.uleb128 0x13
 1303 0120 00       		.byte	0
 1304 0121 00       		.byte	0
 1305 0122 12       		.uleb128 0x12
 1306 0123 8A8201   		.uleb128 0x410a
 1307 0126 00       		.byte	0
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 40


 1308 0127 02       		.uleb128 0x2
 1309 0128 18       		.uleb128 0x18
 1310 0129 9142     		.uleb128 0x2111
 1311 012b 18       		.uleb128 0x18
 1312 012c 00       		.byte	0
 1313 012d 00       		.byte	0
 1314 012e 13       		.uleb128 0x13
 1315 012f 34       		.uleb128 0x34
 1316 0130 00       		.byte	0
 1317 0131 03       		.uleb128 0x3
 1318 0132 0E       		.uleb128 0xe
 1319 0133 3A       		.uleb128 0x3a
 1320 0134 0B       		.uleb128 0xb
 1321 0135 3B       		.uleb128 0x3b
 1322 0136 0B       		.uleb128 0xb
 1323 0137 49       		.uleb128 0x49
 1324 0138 13       		.uleb128 0x13
 1325 0139 3F       		.uleb128 0x3f
 1326 013a 19       		.uleb128 0x19
 1327 013b 02       		.uleb128 0x2
 1328 013c 18       		.uleb128 0x18
 1329 013d 00       		.byte	0
 1330 013e 00       		.byte	0
 1331 013f 14       		.uleb128 0x14
 1332 0140 2E       		.uleb128 0x2e
 1333 0141 00       		.byte	0
 1334 0142 3F       		.uleb128 0x3f
 1335 0143 19       		.uleb128 0x19
 1336 0144 3C       		.uleb128 0x3c
 1337 0145 19       		.uleb128 0x19
 1338 0146 6E       		.uleb128 0x6e
 1339 0147 0E       		.uleb128 0xe
 1340 0148 03       		.uleb128 0x3
 1341 0149 0E       		.uleb128 0xe
 1342 014a 3A       		.uleb128 0x3a
 1343 014b 0B       		.uleb128 0xb
 1344 014c 3B       		.uleb128 0x3b
 1345 014d 0B       		.uleb128 0xb
 1346 014e 00       		.byte	0
 1347 014f 00       		.byte	0
 1348 0150 00       		.byte	0
 1349              		.section	.debug_loc,"",%progbits
 1350              	.Ldebug_loc0:
 1351              	.LLST0:
 1352 0000 00000000 		.4byte	.LVL0
 1353 0004 06000000 		.4byte	.LVL1
 1354 0008 0100     		.2byte	0x1
 1355 000a 50       		.byte	0x50
 1356 000b 06000000 		.4byte	.LVL1
 1357 000f 28000000 		.4byte	.LFE5
 1358 0013 0400     		.2byte	0x4
 1359 0015 F3       		.byte	0xf3
 1360 0016 01       		.uleb128 0x1
 1361 0017 50       		.byte	0x50
 1362 0018 9F       		.byte	0x9f
 1363 0019 00000000 		.4byte	0
 1364 001d 00000000 		.4byte	0
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 41


 1365              	.LLST1:
 1366 0021 08000000 		.4byte	.LVL2
 1367 0025 1C000000 		.4byte	.LVL4
 1368 0029 0100     		.2byte	0x1
 1369 002b 50       		.byte	0x50
 1370 002c 00000000 		.4byte	0
 1371 0030 00000000 		.4byte	0
 1372              	.LLST2:
 1373 0034 0A000000 		.4byte	.LVL13
 1374 0038 0E000000 		.4byte	.LVL14
 1375 003c 0100     		.2byte	0x1
 1376 003e 53       		.byte	0x53
 1377 003f 00000000 		.4byte	0
 1378 0043 00000000 		.4byte	0
 1379              	.LLST3:
 1380 0047 48000000 		.4byte	.LVL19
 1381 004b 55000000 		.4byte	.LVL20-1
 1382 004f 0100     		.2byte	0x1
 1383 0051 50       		.byte	0x50
 1384 0052 00000000 		.4byte	0
 1385 0056 00000000 		.4byte	0
 1386              		.section	.debug_aranges,"",%progbits
 1387 0000 9C000000 		.4byte	0x9c
 1388 0004 0200     		.2byte	0x2
 1389 0006 00000000 		.4byte	.Ldebug_info0
 1390 000a 04       		.byte	0x4
 1391 000b 00       		.byte	0
 1392 000c 0000     		.2byte	0
 1393 000e 0000     		.2byte	0
 1394 0010 00000000 		.4byte	.LFB3
 1395 0014 14000000 		.4byte	.LFE3-.LFB3
 1396 0018 00000000 		.4byte	.LFB4
 1397 001c 10000000 		.4byte	.LFE4-.LFB4
 1398 0020 00000000 		.4byte	.LFB5
 1399 0024 28000000 		.4byte	.LFE5-.LFB5
 1400 0028 00000000 		.4byte	.LFB6
 1401 002c 0C000000 		.4byte	.LFE6-.LFB6
 1402 0030 00000000 		.4byte	.LFB7
 1403 0034 14000000 		.4byte	.LFE7-.LFB7
 1404 0038 00000000 		.4byte	.LFB9
 1405 003c 0C000000 		.4byte	.LFE9-.LFB9
 1406 0040 00000000 		.4byte	.LFB10
 1407 0044 0C000000 		.4byte	.LFE10-.LFB10
 1408 0048 00000000 		.4byte	.LFB11
 1409 004c 0C000000 		.4byte	.LFE11-.LFB11
 1410 0050 00000000 		.4byte	.LFB12
 1411 0054 0C000000 		.4byte	.LFE12-.LFB12
 1412 0058 00000000 		.4byte	.LFB13
 1413 005c 0C000000 		.4byte	.LFE13-.LFB13
 1414 0060 00000000 		.4byte	.LFB14
 1415 0064 0C000000 		.4byte	.LFE14-.LFB14
 1416 0068 00000000 		.4byte	.LFB15
 1417 006c 0C000000 		.4byte	.LFE15-.LFB15
 1418 0070 00000000 		.4byte	.LFB8
 1419 0074 12000000 		.4byte	.LFE8-.LFB8
 1420 0078 00000000 		.4byte	.LFB2
 1421 007c 68000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 42


 1422 0080 00000000 		.4byte	.LFB1
 1423 0084 20000000 		.4byte	.LFE1-.LFB1
 1424 0088 00000000 		.4byte	.LFB16
 1425 008c 0C000000 		.4byte	.LFE16-.LFB16
 1426 0090 00000000 		.4byte	.LFB17
 1427 0094 0C000000 		.4byte	.LFE17-.LFB17
 1428 0098 00000000 		.4byte	0
 1429 009c 00000000 		.4byte	0
 1430              		.section	.debug_ranges,"",%progbits
 1431              	.Ldebug_ranges0:
 1432 0000 00000000 		.4byte	.LFB3
 1433 0004 14000000 		.4byte	.LFE3
 1434 0008 00000000 		.4byte	.LFB4
 1435 000c 10000000 		.4byte	.LFE4
 1436 0010 00000000 		.4byte	.LFB5
 1437 0014 28000000 		.4byte	.LFE5
 1438 0018 00000000 		.4byte	.LFB6
 1439 001c 0C000000 		.4byte	.LFE6
 1440 0020 00000000 		.4byte	.LFB7
 1441 0024 14000000 		.4byte	.LFE7
 1442 0028 00000000 		.4byte	.LFB9
 1443 002c 0C000000 		.4byte	.LFE9
 1444 0030 00000000 		.4byte	.LFB10
 1445 0034 0C000000 		.4byte	.LFE10
 1446 0038 00000000 		.4byte	.LFB11
 1447 003c 0C000000 		.4byte	.LFE11
 1448 0040 00000000 		.4byte	.LFB12
 1449 0044 0C000000 		.4byte	.LFE12
 1450 0048 00000000 		.4byte	.LFB13
 1451 004c 0C000000 		.4byte	.LFE13
 1452 0050 00000000 		.4byte	.LFB14
 1453 0054 0C000000 		.4byte	.LFE14
 1454 0058 00000000 		.4byte	.LFB15
 1455 005c 0C000000 		.4byte	.LFE15
 1456 0060 00000000 		.4byte	.LFB8
 1457 0064 12000000 		.4byte	.LFE8
 1458 0068 00000000 		.4byte	.LFB2
 1459 006c 68000000 		.4byte	.LFE2
 1460 0070 00000000 		.4byte	.LFB1
 1461 0074 20000000 		.4byte	.LFE1
 1462 0078 00000000 		.4byte	.LFB16
 1463 007c 0C000000 		.4byte	.LFE16
 1464 0080 00000000 		.4byte	.LFB17
 1465 0084 0C000000 		.4byte	.LFE17
 1466 0088 00000000 		.4byte	0
 1467 008c 00000000 		.4byte	0
 1468              		.section	.debug_line,"",%progbits
 1469              	.Ldebug_line0:
 1470 0000 A4010000 		.section	.debug_str,"MS",%progbits,1
 1470      02004B00 
 1470      00000201 
 1470      FB0E0D00 
 1470      01010101 
 1471              	.LASF15:
 1472 0000 72656731 		.ascii	"reg16\000"
 1472      3600
 1473              	.LASF43:
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 43


 1474 0006 50574D5F 		.ascii	"PWM_ReadCompare\000"
 1474      52656164 
 1474      436F6D70 
 1474      61726500 
 1475              	.LASF39:
 1476 0016 50574D5F 		.ascii	"PWM_Init\000"
 1476      496E6974 
 1476      00
 1477              	.LASF38:
 1478 001f 50574D5F 		.ascii	"PWM_ClearFIFO\000"
 1478      436C6561 
 1478      72464946 
 1478      4F00
 1479              	.LASF19:
 1480 002d 50574D5F 		.ascii	"PWM_Stop\000"
 1480      53746F70 
 1480      00
 1481              	.LASF27:
 1482 0036 70657269 		.ascii	"period\000"
 1482      6F6400
 1483              	.LASF42:
 1484 003d 50574D5F 		.ascii	"PWM_Start\000"
 1484      53746172 
 1484      7400
 1485              	.LASF3:
 1486 0047 73686F72 		.ascii	"short unsigned int\000"
 1486      7420756E 
 1486      7369676E 
 1486      65642069 
 1486      6E7400
 1487              	.LASF37:
 1488 005a 50574D5F 		.ascii	"PWM_ReadCapture\000"
 1488      52656164 
 1488      43617074 
 1488      75726500 
 1489              	.LASF22:
 1490 006a 50574D5F 		.ascii	"PWM_SetCompareMode\000"
 1490      53657443 
 1490      6F6D7061 
 1490      72654D6F 
 1490      646500
 1491              	.LASF11:
 1492 007d 666C6F61 		.ascii	"float\000"
 1492      7400
 1493              	.LASF25:
 1494 0083 636F756E 		.ascii	"counter\000"
 1494      74657200 
 1495              	.LASF1:
 1496 008b 756E7369 		.ascii	"unsigned char\000"
 1496      676E6564 
 1496      20636861 
 1496      7200
 1497              	.LASF14:
 1498 0099 72656738 		.ascii	"reg8\000"
 1498      00
 1499              	.LASF5:
 1500 009e 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 44


 1500      20756E73 
 1500      69676E65 
 1500      6420696E 
 1500      7400
 1501              	.LASF32:
 1502 00b0 50574D5F 		.ascii	"PWM_ReadCounter\000"
 1502      52656164 
 1502      436F756E 
 1502      74657200 
 1503              	.LASF9:
 1504 00c0 75696E74 		.ascii	"uint8\000"
 1504      3800
 1505              	.LASF36:
 1506 00c6 636F6E74 		.ascii	"control\000"
 1506      726F6C00 
 1507              	.LASF49:
 1508 00ce 433A5C55 		.ascii	"C:\\Users\\JamesH\\OneDrive - Monash University\\MO"
 1508      73657273 
 1508      5C4A616D 
 1508      6573485C 
 1508      4F6E6544 
 1509 00fd 4E415348 		.ascii	"NASH\\2022\\ECE4191\\Project\\PSOC\\Project1\\Works"
 1509      5C323032 
 1509      325C4543 
 1509      45343139 
 1509      315C5072 
 1510 012a 70616365 		.ascii	"pace01\\DesignAttempt01.cydsn\000"
 1510      30315C44 
 1510      65736967 
 1510      6E417474 
 1510      656D7074 
 1511              	.LASF12:
 1512 0147 646F7562 		.ascii	"double\000"
 1512      6C6500
 1513              	.LASF28:
 1514 014e 50574D5F 		.ascii	"PWM_WriteCompare\000"
 1514      57726974 
 1514      65436F6D 
 1514      70617265 
 1514      00
 1515              	.LASF20:
 1516 015f 636F6D70 		.ascii	"comparemode1masked\000"
 1516      6172656D 
 1516      6F646531 
 1516      6D61736B 
 1516      656400
 1517              	.LASF10:
 1518 0172 75696E74 		.ascii	"uint16\000"
 1518      313600
 1519              	.LASF51:
 1520 0179 50574D5F 		.ascii	"PWM_initVar\000"
 1520      696E6974 
 1520      56617200 
 1521              	.LASF45:
 1522 0185 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1522      74657243 
 1522      72697469 
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 45


 1522      63616C53 
 1522      65637469 
 1523              	.LASF8:
 1524 019c 756E7369 		.ascii	"unsigned int\000"
 1524      676E6564 
 1524      20696E74 
 1524      00
 1525              	.LASF21:
 1526 01a9 636F6D70 		.ascii	"comparemode2masked\000"
 1526      6172656D 
 1526      6F646532 
 1526      6D61736B 
 1526      656400
 1527              	.LASF7:
 1528 01bc 6C6F6E67 		.ascii	"long long unsigned int\000"
 1528      206C6F6E 
 1528      6720756E 
 1528      7369676E 
 1528      65642069 
 1529              	.LASF34:
 1530 01d3 72657375 		.ascii	"result\000"
 1530      6C7400
 1531              	.LASF47:
 1532 01da 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1532      43313120 
 1532      352E342E 
 1532      31203230 
 1532      31363036 
 1533 020d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1533      20726576 
 1533      6973696F 
 1533      6E203233 
 1533      37373135 
 1534 0240 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1534      66756E63 
 1534      74696F6E 
 1534      2D736563 
 1534      74696F6E 
 1535              	.LASF26:
 1536 0268 50574D5F 		.ascii	"PWM_WritePeriod\000"
 1536      57726974 
 1536      65506572 
 1536      696F6400 
 1537              	.LASF30:
 1538 0278 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 1538      53657449 
 1538      6E746572 
 1538      72757074 
 1538      4D6F6465 
 1539              	.LASF17:
 1540 028d 73697A65 		.ascii	"sizetype\000"
 1540      74797065 
 1540      00
 1541              	.LASF6:
 1542 0296 6C6F6E67 		.ascii	"long long int\000"
 1542      206C6F6E 
 1542      6720696E 
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 46


 1542      7400
 1543              	.LASF31:
 1544 02a4 696E7465 		.ascii	"interruptMode\000"
 1544      72727570 
 1544      744D6F64 
 1544      6500
 1545              	.LASF35:
 1546 02b2 50574D5F 		.ascii	"PWM_WriteControlRegister\000"
 1546      57726974 
 1546      65436F6E 
 1546      74726F6C 
 1546      52656769 
 1547              	.LASF41:
 1548 02cb 50574D5F 		.ascii	"PWM_interruptState\000"
 1548      696E7465 
 1548      72727570 
 1548      74537461 
 1548      746500
 1549              	.LASF44:
 1550 02de 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 1550      52656164 
 1550      50657269 
 1550      6F6400
 1551              	.LASF2:
 1552 02ed 73686F72 		.ascii	"short int\000"
 1552      7420696E 
 1552      7400
 1553              	.LASF23:
 1554 02f7 50574D5F 		.ascii	"PWM_WriteCounter\000"
 1554      57726974 
 1554      65436F75 
 1554      6E746572 
 1554      00
 1555              	.LASF46:
 1556 0308 43794578 		.ascii	"CyExitCriticalSection\000"
 1556      69744372 
 1556      69746963 
 1556      616C5365 
 1556      6374696F 
 1557              	.LASF24:
 1558 031e 636F6D70 		.ascii	"comparemode\000"
 1558      6172656D 
 1558      6F646500 
 1559              	.LASF4:
 1560 032a 6C6F6E67 		.ascii	"long int\000"
 1560      20696E74 
 1560      00
 1561              	.LASF13:
 1562 0333 63686172 		.ascii	"char\000"
 1562      00
 1563              	.LASF48:
 1564 0338 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM.c\000"
 1564      72617465 
 1564      645F536F 
 1564      75726365 
 1564      5C50536F 
 1565              	.LASF16:
ARM GAS  C:\Users\JamesH\AppData\Local\Temp\ccGdyYzB.s 			page 47


 1566 0355 6C6F6E67 		.ascii	"long double\000"
 1566      20646F75 
 1566      626C6500 
 1567              	.LASF50:
 1568 0361 50574D5F 		.ascii	"PWM_ReadControlRegister\000"
 1568      52656164 
 1568      436F6E74 
 1568      726F6C52 
 1568      65676973 
 1569              	.LASF0:
 1570 0379 7369676E 		.ascii	"signed char\000"
 1570      65642063 
 1570      68617200 
 1571              	.LASF29:
 1572 0385 636F6D70 		.ascii	"compare\000"
 1572      61726500 
 1573              	.LASF18:
 1574 038d 50574D5F 		.ascii	"PWM_Enable\000"
 1574      456E6162 
 1574      6C6500
 1575              	.LASF33:
 1576 0398 50574D5F 		.ascii	"PWM_ReadStatusRegister\000"
 1576      52656164 
 1576      53746174 
 1576      75735265 
 1576      67697374 
 1577              	.LASF40:
 1578 03af 6374726C 		.ascii	"ctrl\000"
 1578      00
 1579              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
